# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.training_load_pro_load_enum import TrainingLoadProLoadEnum  # noqa: F401,E501
from swagger_server.models.training_load_pro_rpe_enum import TrainingLoadProRpeEnum  # noqa: F401,E501
from swagger_server import util


class TrainingLoadProSample(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, _date: date=None, cardio_load: float=None, muscle_load: float=None, perceived_load: float=None, cardio_load_interpretation: TrainingLoadProLoadEnum=None, muscle_load_interpretation: TrainingLoadProLoadEnum=None, perceived_load_interpretation: TrainingLoadProLoadEnum=None, user_rpe: TrainingLoadProRpeEnum=None):  # noqa: E501
        """TrainingLoadProSample - a model defined in Swagger

        :param _date: The _date of this TrainingLoadProSample.  # noqa: E501
        :type _date: date
        :param cardio_load: The cardio_load of this TrainingLoadProSample.  # noqa: E501
        :type cardio_load: float
        :param muscle_load: The muscle_load of this TrainingLoadProSample.  # noqa: E501
        :type muscle_load: float
        :param perceived_load: The perceived_load of this TrainingLoadProSample.  # noqa: E501
        :type perceived_load: float
        :param cardio_load_interpretation: The cardio_load_interpretation of this TrainingLoadProSample.  # noqa: E501
        :type cardio_load_interpretation: TrainingLoadProLoadEnum
        :param muscle_load_interpretation: The muscle_load_interpretation of this TrainingLoadProSample.  # noqa: E501
        :type muscle_load_interpretation: TrainingLoadProLoadEnum
        :param perceived_load_interpretation: The perceived_load_interpretation of this TrainingLoadProSample.  # noqa: E501
        :type perceived_load_interpretation: TrainingLoadProLoadEnum
        :param user_rpe: The user_rpe of this TrainingLoadProSample.  # noqa: E501
        :type user_rpe: TrainingLoadProRpeEnum
        """
        self.swagger_types = {
            '_date': date,
            'cardio_load': float,
            'muscle_load': float,
            'perceived_load': float,
            'cardio_load_interpretation': TrainingLoadProLoadEnum,
            'muscle_load_interpretation': TrainingLoadProLoadEnum,
            'perceived_load_interpretation': TrainingLoadProLoadEnum,
            'user_rpe': TrainingLoadProRpeEnum
        }

        self.attribute_map = {
            '_date': 'date',
            'cardio_load': 'cardio-load',
            'muscle_load': 'muscle-load',
            'perceived_load': 'perceived-load',
            'cardio_load_interpretation': 'cardio-load-interpretation',
            'muscle_load_interpretation': 'muscle-load-interpretation',
            'perceived_load_interpretation': 'perceived-load-interpretation',
            'user_rpe': 'user-rpe'
        }
        self.__date = _date
        self._cardio_load = cardio_load
        self._muscle_load = muscle_load
        self._perceived_load = perceived_load
        self._cardio_load_interpretation = cardio_load_interpretation
        self._muscle_load_interpretation = muscle_load_interpretation
        self._perceived_load_interpretation = perceived_load_interpretation
        self._user_rpe = user_rpe

    @classmethod
    def from_dict(cls, dikt) -> 'TrainingLoadProSample':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The training-load-pro-sample of this TrainingLoadProSample.  # noqa: E501
        :rtype: TrainingLoadProSample
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self) -> date:
        """Gets the _date of this TrainingLoadProSample.

        Date in format YYYY-MM-DD.  # noqa: E501

        :return: The _date of this TrainingLoadProSample.
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date: date):
        """Sets the _date of this TrainingLoadProSample.

        Date in format YYYY-MM-DD.  # noqa: E501

        :param _date: The _date of this TrainingLoadProSample.
        :type _date: date
        """

        self.__date = _date

    @property
    def cardio_load(self) -> float:
        """Gets the cardio_load of this TrainingLoadProSample.

        User cardio load value.  # noqa: E501

        :return: The cardio_load of this TrainingLoadProSample.
        :rtype: float
        """
        return self._cardio_load

    @cardio_load.setter
    def cardio_load(self, cardio_load: float):
        """Sets the cardio_load of this TrainingLoadProSample.

        User cardio load value.  # noqa: E501

        :param cardio_load: The cardio_load of this TrainingLoadProSample.
        :type cardio_load: float
        """

        self._cardio_load = cardio_load

    @property
    def muscle_load(self) -> float:
        """Gets the muscle_load of this TrainingLoadProSample.

        User muscle load value.  # noqa: E501

        :return: The muscle_load of this TrainingLoadProSample.
        :rtype: float
        """
        return self._muscle_load

    @muscle_load.setter
    def muscle_load(self, muscle_load: float):
        """Sets the muscle_load of this TrainingLoadProSample.

        User muscle load value.  # noqa: E501

        :param muscle_load: The muscle_load of this TrainingLoadProSample.
        :type muscle_load: float
        """

        self._muscle_load = muscle_load

    @property
    def perceived_load(self) -> float:
        """Gets the perceived_load of this TrainingLoadProSample.

        User perceived load value.  # noqa: E501

        :return: The perceived_load of this TrainingLoadProSample.
        :rtype: float
        """
        return self._perceived_load

    @perceived_load.setter
    def perceived_load(self, perceived_load: float):
        """Sets the perceived_load of this TrainingLoadProSample.

        User perceived load value.  # noqa: E501

        :param perceived_load: The perceived_load of this TrainingLoadProSample.
        :type perceived_load: float
        """

        self._perceived_load = perceived_load

    @property
    def cardio_load_interpretation(self) -> TrainingLoadProLoadEnum:
        """Gets the cardio_load_interpretation of this TrainingLoadProSample.


        :return: The cardio_load_interpretation of this TrainingLoadProSample.
        :rtype: TrainingLoadProLoadEnum
        """
        return self._cardio_load_interpretation

    @cardio_load_interpretation.setter
    def cardio_load_interpretation(self, cardio_load_interpretation: TrainingLoadProLoadEnum):
        """Sets the cardio_load_interpretation of this TrainingLoadProSample.


        :param cardio_load_interpretation: The cardio_load_interpretation of this TrainingLoadProSample.
        :type cardio_load_interpretation: TrainingLoadProLoadEnum
        """

        self._cardio_load_interpretation = cardio_load_interpretation

    @property
    def muscle_load_interpretation(self) -> TrainingLoadProLoadEnum:
        """Gets the muscle_load_interpretation of this TrainingLoadProSample.


        :return: The muscle_load_interpretation of this TrainingLoadProSample.
        :rtype: TrainingLoadProLoadEnum
        """
        return self._muscle_load_interpretation

    @muscle_load_interpretation.setter
    def muscle_load_interpretation(self, muscle_load_interpretation: TrainingLoadProLoadEnum):
        """Sets the muscle_load_interpretation of this TrainingLoadProSample.


        :param muscle_load_interpretation: The muscle_load_interpretation of this TrainingLoadProSample.
        :type muscle_load_interpretation: TrainingLoadProLoadEnum
        """

        self._muscle_load_interpretation = muscle_load_interpretation

    @property
    def perceived_load_interpretation(self) -> TrainingLoadProLoadEnum:
        """Gets the perceived_load_interpretation of this TrainingLoadProSample.


        :return: The perceived_load_interpretation of this TrainingLoadProSample.
        :rtype: TrainingLoadProLoadEnum
        """
        return self._perceived_load_interpretation

    @perceived_load_interpretation.setter
    def perceived_load_interpretation(self, perceived_load_interpretation: TrainingLoadProLoadEnum):
        """Sets the perceived_load_interpretation of this TrainingLoadProSample.


        :param perceived_load_interpretation: The perceived_load_interpretation of this TrainingLoadProSample.
        :type perceived_load_interpretation: TrainingLoadProLoadEnum
        """

        self._perceived_load_interpretation = perceived_load_interpretation

    @property
    def user_rpe(self) -> TrainingLoadProRpeEnum:
        """Gets the user_rpe of this TrainingLoadProSample.


        :return: The user_rpe of this TrainingLoadProSample.
        :rtype: TrainingLoadProRpeEnum
        """
        return self._user_rpe

    @user_rpe.setter
    def user_rpe(self, user_rpe: TrainingLoadProRpeEnum):
        """Sets the user_rpe of this TrainingLoadProSample.


        :param user_rpe: The user_rpe of this TrainingLoadProSample.
        :type user_rpe: TrainingLoadProRpeEnum
        """

        self._user_rpe = user_rpe
