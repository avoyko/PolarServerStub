# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CircadianBedtime(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, validity: str=None, quality: str=None, result_type: str=None, period_start_time: date=None, period_end_time: date=None, preferred_sleep_period_start_time: date=None, preferred_sleep_period_end_time: date=None, sleep_gate_start_time: date=None, sleep_gate_end_time: date=None, sleep_timezone_offset_minutes: float=None):  # noqa: E501
        """CircadianBedtime - a model defined in Swagger

        :param validity: The validity of this CircadianBedtime.  # noqa: E501
        :type validity: str
        :param quality: The quality of this CircadianBedtime.  # noqa: E501
        :type quality: str
        :param result_type: The result_type of this CircadianBedtime.  # noqa: E501
        :type result_type: str
        :param period_start_time: The period_start_time of this CircadianBedtime.  # noqa: E501
        :type period_start_time: date
        :param period_end_time: The period_end_time of this CircadianBedtime.  # noqa: E501
        :type period_end_time: date
        :param preferred_sleep_period_start_time: The preferred_sleep_period_start_time of this CircadianBedtime.  # noqa: E501
        :type preferred_sleep_period_start_time: date
        :param preferred_sleep_period_end_time: The preferred_sleep_period_end_time of this CircadianBedtime.  # noqa: E501
        :type preferred_sleep_period_end_time: date
        :param sleep_gate_start_time: The sleep_gate_start_time of this CircadianBedtime.  # noqa: E501
        :type sleep_gate_start_time: date
        :param sleep_gate_end_time: The sleep_gate_end_time of this CircadianBedtime.  # noqa: E501
        :type sleep_gate_end_time: date
        :param sleep_timezone_offset_minutes: The sleep_timezone_offset_minutes of this CircadianBedtime.  # noqa: E501
        :type sleep_timezone_offset_minutes: float
        """
        self.swagger_types = {
            'validity': str,
            'quality': str,
            'result_type': str,
            'period_start_time': date,
            'period_end_time': date,
            'preferred_sleep_period_start_time': date,
            'preferred_sleep_period_end_time': date,
            'sleep_gate_start_time': date,
            'sleep_gate_end_time': date,
            'sleep_timezone_offset_minutes': float
        }

        self.attribute_map = {
            'validity': 'validity',
            'quality': 'quality',
            'result_type': 'result_type',
            'period_start_time': 'period_start_time',
            'period_end_time': 'period_end_time',
            'preferred_sleep_period_start_time': 'preferred_sleep_period_start_time',
            'preferred_sleep_period_end_time': 'preferred_sleep_period_end_time',
            'sleep_gate_start_time': 'sleep_gate_start_time',
            'sleep_gate_end_time': 'sleep_gate_end_time',
            'sleep_timezone_offset_minutes': 'sleep_timezone_offset_minutes'
        }
        self._validity = validity
        self._quality = quality
        self._result_type = result_type
        self._period_start_time = period_start_time
        self._period_end_time = period_end_time
        self._preferred_sleep_period_start_time = preferred_sleep_period_start_time
        self._preferred_sleep_period_end_time = preferred_sleep_period_end_time
        self._sleep_gate_start_time = sleep_gate_start_time
        self._sleep_gate_end_time = sleep_gate_end_time
        self._sleep_timezone_offset_minutes = sleep_timezone_offset_minutes

    @classmethod
    def from_dict(cls, dikt) -> 'CircadianBedtime':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The circadian-bedtime of this CircadianBedtime.  # noqa: E501
        :rtype: CircadianBedtime
        """
        return util.deserialize_model(dikt, cls)

    @property
    def validity(self) -> str:
        """Gets the validity of this CircadianBedtime.

        Validity  # noqa: E501

        :return: The validity of this CircadianBedtime.
        :rtype: str
        """
        return self._validity

    @validity.setter
    def validity(self, validity: str):
        """Sets the validity of this CircadianBedtime.

        Validity  # noqa: E501

        :param validity: The validity of this CircadianBedtime.
        :type validity: str
        """
        allowed_values = ["VALIDITY_UNKNOWN", "VALIDITY_RESET", "VALIDITY_NOT_VALID", "VALIDITY_ESTIMATE", "VALIDITY_VALID"]  # noqa: E501
        if validity not in allowed_values:
            raise ValueError(
                "Invalid value for `validity` ({0}), must be one of {1}"
                .format(validity, allowed_values)
            )

        self._validity = validity

    @property
    def quality(self) -> str:
        """Gets the quality of this CircadianBedtime.

        Quality  # noqa: E501

        :return: The quality of this CircadianBedtime.
        :rtype: str
        """
        return self._quality

    @quality.setter
    def quality(self, quality: str):
        """Sets the quality of this CircadianBedtime.

        Quality  # noqa: E501

        :param quality: The quality of this CircadianBedtime.
        :type quality: str
        """
        allowed_values = ["CIRCADIAN_BEDTIME_QUALITY_UNKNOWN", "CIRCADIAN_BEDTIME_QUALITY_WEAK", "CIRCADIAN_BEDTIME_QUALITY_COMPROMISED", "CIRCADIAN_BEDTIME_QUALITY_CLEARLY_RECOGNIZABLE"]  # noqa: E501
        if quality not in allowed_values:
            raise ValueError(
                "Invalid value for `quality` ({0}), must be one of {1}"
                .format(quality, allowed_values)
            )

        self._quality = quality

    @property
    def result_type(self) -> str:
        """Gets the result_type of this CircadianBedtime.

        Result type  # noqa: E501

        :return: The result_type of this CircadianBedtime.
        :rtype: str
        """
        return self._result_type

    @result_type.setter
    def result_type(self, result_type: str):
        """Sets the result_type of this CircadianBedtime.

        Result type  # noqa: E501

        :param result_type: The result_type of this CircadianBedtime.
        :type result_type: str
        """
        allowed_values = ["CIRCADIAN_BEDTIME_TYPE_UNKNOWN", "CIRCADIAN_BEDTIME_TYPE_PREDICTION", "CIRCADIAN_BEDTIME_TYPE_HISTORY"]  # noqa: E501
        if result_type not in allowed_values:
            raise ValueError(
                "Invalid value for `result_type` ({0}), must be one of {1}"
                .format(result_type, allowed_values)
            )

        self._result_type = result_type

    @property
    def period_start_time(self) -> date:
        """Gets the period_start_time of this CircadianBedtime.

        Circadian bedtime period start time (UTC)  # noqa: E501

        :return: The period_start_time of this CircadianBedtime.
        :rtype: date
        """
        return self._period_start_time

    @period_start_time.setter
    def period_start_time(self, period_start_time: date):
        """Sets the period_start_time of this CircadianBedtime.

        Circadian bedtime period start time (UTC)  # noqa: E501

        :param period_start_time: The period_start_time of this CircadianBedtime.
        :type period_start_time: date
        """

        self._period_start_time = period_start_time

    @property
    def period_end_time(self) -> date:
        """Gets the period_end_time of this CircadianBedtime.

        Circadian bedtime period end time (UTC)  # noqa: E501

        :return: The period_end_time of this CircadianBedtime.
        :rtype: date
        """
        return self._period_end_time

    @period_end_time.setter
    def period_end_time(self, period_end_time: date):
        """Sets the period_end_time of this CircadianBedtime.

        Circadian bedtime period end time (UTC)  # noqa: E501

        :param period_end_time: The period_end_time of this CircadianBedtime.
        :type period_end_time: date
        """

        self._period_end_time = period_end_time

    @property
    def preferred_sleep_period_start_time(self) -> date:
        """Gets the preferred_sleep_period_start_time of this CircadianBedtime.

        Circadian bedtime preferred sleep period start time (UTC)  # noqa: E501

        :return: The preferred_sleep_period_start_time of this CircadianBedtime.
        :rtype: date
        """
        return self._preferred_sleep_period_start_time

    @preferred_sleep_period_start_time.setter
    def preferred_sleep_period_start_time(self, preferred_sleep_period_start_time: date):
        """Sets the preferred_sleep_period_start_time of this CircadianBedtime.

        Circadian bedtime preferred sleep period start time (UTC)  # noqa: E501

        :param preferred_sleep_period_start_time: The preferred_sleep_period_start_time of this CircadianBedtime.
        :type preferred_sleep_period_start_time: date
        """

        self._preferred_sleep_period_start_time = preferred_sleep_period_start_time

    @property
    def preferred_sleep_period_end_time(self) -> date:
        """Gets the preferred_sleep_period_end_time of this CircadianBedtime.

        Circadian bedtime preferred sleep period end time (UTC)  # noqa: E501

        :return: The preferred_sleep_period_end_time of this CircadianBedtime.
        :rtype: date
        """
        return self._preferred_sleep_period_end_time

    @preferred_sleep_period_end_time.setter
    def preferred_sleep_period_end_time(self, preferred_sleep_period_end_time: date):
        """Sets the preferred_sleep_period_end_time of this CircadianBedtime.

        Circadian bedtime preferred sleep period end time (UTC)  # noqa: E501

        :param preferred_sleep_period_end_time: The preferred_sleep_period_end_time of this CircadianBedtime.
        :type preferred_sleep_period_end_time: date
        """

        self._preferred_sleep_period_end_time = preferred_sleep_period_end_time

    @property
    def sleep_gate_start_time(self) -> date:
        """Gets the sleep_gate_start_time of this CircadianBedtime.

        Circadian bedtime sleep gate (suggested fall a sleep window) start time (UTC)  # noqa: E501

        :return: The sleep_gate_start_time of this CircadianBedtime.
        :rtype: date
        """
        return self._sleep_gate_start_time

    @sleep_gate_start_time.setter
    def sleep_gate_start_time(self, sleep_gate_start_time: date):
        """Sets the sleep_gate_start_time of this CircadianBedtime.

        Circadian bedtime sleep gate (suggested fall a sleep window) start time (UTC)  # noqa: E501

        :param sleep_gate_start_time: The sleep_gate_start_time of this CircadianBedtime.
        :type sleep_gate_start_time: date
        """

        self._sleep_gate_start_time = sleep_gate_start_time

    @property
    def sleep_gate_end_time(self) -> date:
        """Gets the sleep_gate_end_time of this CircadianBedtime.

        Circadian bedtime sleep gate (suggested fall a sleep window) end time (UTC)  # noqa: E501

        :return: The sleep_gate_end_time of this CircadianBedtime.
        :rtype: date
        """
        return self._sleep_gate_end_time

    @sleep_gate_end_time.setter
    def sleep_gate_end_time(self, sleep_gate_end_time: date):
        """Sets the sleep_gate_end_time of this CircadianBedtime.

        Circadian bedtime sleep gate (suggested fall a sleep window) end time (UTC)  # noqa: E501

        :param sleep_gate_end_time: The sleep_gate_end_time of this CircadianBedtime.
        :type sleep_gate_end_time: date
        """

        self._sleep_gate_end_time = sleep_gate_end_time

    @property
    def sleep_timezone_offset_minutes(self) -> float:
        """Gets the sleep_timezone_offset_minutes of this CircadianBedtime.

        Sleep timezone offset minutes  # noqa: E501

        :return: The sleep_timezone_offset_minutes of this CircadianBedtime.
        :rtype: float
        """
        return self._sleep_timezone_offset_minutes

    @sleep_timezone_offset_minutes.setter
    def sleep_timezone_offset_minutes(self, sleep_timezone_offset_minutes: float):
        """Sets the sleep_timezone_offset_minutes of this CircadianBedtime.

        Sleep timezone offset minutes  # noqa: E501

        :param sleep_timezone_offset_minutes: The sleep_timezone_offset_minutes of this CircadianBedtime.
        :type sleep_timezone_offset_minutes: float
        """

        self._sleep_timezone_offset_minutes = sleep_timezone_offset_minutes
