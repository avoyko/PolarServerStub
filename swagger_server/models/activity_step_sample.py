# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ActivityStepSample(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, steps: int=None, time: str=None):  # noqa: E501
        """ActivityStepSample - a model defined in Swagger

        :param steps: The steps of this ActivityStepSample.  # noqa: E501
        :type steps: int
        :param time: The time of this ActivityStepSample.  # noqa: E501
        :type time: str
        """
        self.swagger_types = {
            'steps': int,
            'time': str
        }

        self.attribute_map = {
            'steps': 'steps',
            'time': 'time'
        }
        self._steps = steps
        self._time = time

    @classmethod
    def from_dict(cls, dikt) -> 'ActivityStepSample':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The activity-step-sample of this ActivityStepSample.  # noqa: E501
        :rtype: ActivityStepSample
        """
        return util.deserialize_model(dikt, cls)

    @property
    def steps(self) -> int:
        """Gets the steps of this ActivityStepSample.

        Number of steps in sample segment. If element is null, step samples are not available for current segment.  # noqa: E501

        :return: The steps of this ActivityStepSample.
        :rtype: int
        """
        return self._steps

    @steps.setter
    def steps(self, steps: int):
        """Sets the steps of this ActivityStepSample.

        Number of steps in sample segment. If element is null, step samples are not available for current segment.  # noqa: E501

        :param steps: The steps of this ActivityStepSample.
        :type steps: int
        """

        self._steps = steps

    @property
    def time(self) -> str:
        """Gets the time of this ActivityStepSample.

        Start time of sample segment.  # noqa: E501

        :return: The time of this ActivityStepSample.
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time: str):
        """Sets the time of this ActivityStepSample.

        Start time of sample segment.  # noqa: E501

        :param time: The time of this ActivityStepSample.
        :type time: str
        """

        self._time = time
