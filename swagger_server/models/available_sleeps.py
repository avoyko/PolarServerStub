# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.available_sleep import AvailableSleep  # noqa: F401,E501
from swagger_server import util


class AvailableSleeps(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, available: List[AvailableSleep]=None):  # noqa: E501
        """AvailableSleeps - a model defined in Swagger

        :param available: The available of this AvailableSleeps.  # noqa: E501
        :type available: List[AvailableSleep]
        """
        self.swagger_types = {
            'available': List[AvailableSleep]
        }

        self.attribute_map = {
            'available': 'available'
        }
        self._available = available

    @classmethod
    def from_dict(cls, dikt) -> 'AvailableSleeps':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The available-sleeps of this AvailableSleeps.  # noqa: E501
        :rtype: AvailableSleeps
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available(self) -> List[AvailableSleep]:
        """Gets the available of this AvailableSleeps.

        List of available sleep data  # noqa: E501

        :return: The available of this AvailableSleeps.
        :rtype: List[AvailableSleep]
        """
        return self._available

    @available.setter
    def available(self, available: List[AvailableSleep]):
        """Sets the available of this AvailableSleeps.

        List of available sleep data  # noqa: E501

        :param available: The available of this AvailableSleeps.
        :type available: List[AvailableSleep]
        """

        self._available = available
