# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Register(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, member_id: str=None):  # noqa: E501
        """Register - a model defined in Swagger

        :param member_id: The member_id of this Register.  # noqa: E501
        :type member_id: str
        """
        self.swagger_types = {
            'member_id': str
        }

        self.attribute_map = {
            'member_id': 'member-id'
        }
        self._member_id = member_id

    @classmethod
    def from_dict(cls, dikt) -> 'Register':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The register of this Register.  # noqa: E501
        :rtype: Register
        """
        return util.deserialize_model(dikt, cls)

    @property
    def member_id(self) -> str:
        """Gets the member_id of this Register.

        Partner's custom identifier for user.  # noqa: E501

        :return: The member_id of this Register.
        :rtype: str
        """
        return self._member_id

    @member_id.setter
    def member_id(self, member_id: str):
        """Sets the member_id of this Register.

        Partner's custom identifier for user.  # noqa: E501

        :param member_id: The member_id of this Register.
        :type member_id: str
        """
        if member_id is None:
            raise ValueError("Invalid value for `member_id`, must not be `None`")  # noqa: E501

        self._member_id = member_id
