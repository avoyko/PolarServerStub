# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BodyTemperatureSample(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, temperature_celsius: float=None, recording_time_delta_milliseconds: int=None):  # noqa: E501
        """BodyTemperatureSample - a model defined in Swagger

        :param temperature_celsius: The temperature_celsius of this BodyTemperatureSample.  # noqa: E501
        :type temperature_celsius: float
        :param recording_time_delta_milliseconds: The recording_time_delta_milliseconds of this BodyTemperatureSample.  # noqa: E501
        :type recording_time_delta_milliseconds: int
        """
        self.swagger_types = {
            'temperature_celsius': float,
            'recording_time_delta_milliseconds': int
        }

        self.attribute_map = {
            'temperature_celsius': 'temperature_celsius',
            'recording_time_delta_milliseconds': 'recording_time_delta_milliseconds'
        }
        self._temperature_celsius = temperature_celsius
        self._recording_time_delta_milliseconds = recording_time_delta_milliseconds

    @classmethod
    def from_dict(cls, dikt) -> 'BodyTemperatureSample':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body-temperature-sample of this BodyTemperatureSample.  # noqa: E501
        :rtype: BodyTemperatureSample
        """
        return util.deserialize_model(dikt, cls)

    @property
    def temperature_celsius(self) -> float:
        """Gets the temperature_celsius of this BodyTemperatureSample.


        :return: The temperature_celsius of this BodyTemperatureSample.
        :rtype: float
        """
        return self._temperature_celsius

    @temperature_celsius.setter
    def temperature_celsius(self, temperature_celsius: float):
        """Sets the temperature_celsius of this BodyTemperatureSample.


        :param temperature_celsius: The temperature_celsius of this BodyTemperatureSample.
        :type temperature_celsius: float
        """

        self._temperature_celsius = temperature_celsius

    @property
    def recording_time_delta_milliseconds(self) -> int:
        """Gets the recording_time_delta_milliseconds of this BodyTemperatureSample.


        :return: The recording_time_delta_milliseconds of this BodyTemperatureSample.
        :rtype: int
        """
        return self._recording_time_delta_milliseconds

    @recording_time_delta_milliseconds.setter
    def recording_time_delta_milliseconds(self, recording_time_delta_milliseconds: int):
        """Sets the recording_time_delta_milliseconds of this BodyTemperatureSample.


        :param recording_time_delta_milliseconds: The recording_time_delta_milliseconds of this BodyTemperatureSample.
        :type recording_time_delta_milliseconds: int
        """

        self._recording_time_delta_milliseconds = recording_time_delta_milliseconds
