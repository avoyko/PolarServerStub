# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class QualityMeasurement(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, recording_time_delta_ms: int=None, quality_level: str=None):  # noqa: E501
        """QualityMeasurement - a model defined in Swagger

        :param recording_time_delta_ms: The recording_time_delta_ms of this QualityMeasurement.  # noqa: E501
        :type recording_time_delta_ms: int
        :param quality_level: The quality_level of this QualityMeasurement.  # noqa: E501
        :type quality_level: str
        """
        self.swagger_types = {
            'recording_time_delta_ms': int,
            'quality_level': str
        }

        self.attribute_map = {
            'recording_time_delta_ms': 'recording_time_delta_ms',
            'quality_level': 'quality_level'
        }
        self._recording_time_delta_ms = recording_time_delta_ms
        self._quality_level = quality_level

    @classmethod
    def from_dict(cls, dikt) -> 'QualityMeasurement':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The quality-measurement of this QualityMeasurement.  # noqa: E501
        :rtype: QualityMeasurement
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recording_time_delta_ms(self) -> int:
        """Gets the recording_time_delta_ms of this QualityMeasurement.


        :return: The recording_time_delta_ms of this QualityMeasurement.
        :rtype: int
        """
        return self._recording_time_delta_ms

    @recording_time_delta_ms.setter
    def recording_time_delta_ms(self, recording_time_delta_ms: int):
        """Sets the recording_time_delta_ms of this QualityMeasurement.


        :param recording_time_delta_ms: The recording_time_delta_ms of this QualityMeasurement.
        :type recording_time_delta_ms: int
        """

        self._recording_time_delta_ms = recording_time_delta_ms

    @property
    def quality_level(self) -> str:
        """Gets the quality_level of this QualityMeasurement.


        :return: The quality_level of this QualityMeasurement.
        :rtype: str
        """
        return self._quality_level

    @quality_level.setter
    def quality_level(self, quality_level: str):
        """Sets the quality_level of this QualityMeasurement.


        :param quality_level: The quality_level of this QualityMeasurement.
        :type quality_level: str
        """
        allowed_values = ["ECG_QUALITY_UNKNOWN", "ECG_QUALITY_NO_CONTACT", "ECG_QUALITY_LOW", "ECG_QUALITY_HIGH"]  # noqa: E501
        if quality_level not in allowed_values:
            raise ValueError(
                "Invalid value for `quality_level` ({0}), must be one of {1}"
                .format(quality_level, allowed_values)
            )

        self._quality_level = quality_level
