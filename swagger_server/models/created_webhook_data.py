# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.webhook_type import WebhookType  # noqa: F401,E501
from swagger_server import util


class CreatedWebhookData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, events: List[WebhookType]=None, url: str=None, signature_secret_key: str=None):  # noqa: E501
        """CreatedWebhookData - a model defined in Swagger

        :param id: The id of this CreatedWebhookData.  # noqa: E501
        :type id: str
        :param events: The events of this CreatedWebhookData.  # noqa: E501
        :type events: List[WebhookType]
        :param url: The url of this CreatedWebhookData.  # noqa: E501
        :type url: str
        :param signature_secret_key: The signature_secret_key of this CreatedWebhookData.  # noqa: E501
        :type signature_secret_key: str
        """
        self.swagger_types = {
            'id': str,
            'events': List[WebhookType],
            'url': str,
            'signature_secret_key': str
        }

        self.attribute_map = {
            'id': 'id',
            'events': 'events',
            'url': 'url',
            'signature_secret_key': 'signature_secret_key'
        }
        self._id = id
        self._events = events
        self._url = url
        self._signature_secret_key = signature_secret_key

    @classmethod
    def from_dict(cls, dikt) -> 'CreatedWebhookData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The createdWebhook_data of this CreatedWebhookData.  # noqa: E501
        :rtype: CreatedWebhookData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this CreatedWebhookData.

        Id of the new webhook.  # noqa: E501

        :return: The id of this CreatedWebhookData.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this CreatedWebhookData.

        Id of the new webhook.  # noqa: E501

        :param id: The id of this CreatedWebhookData.
        :type id: str
        """

        self._id = id

    @property
    def events(self) -> List[WebhookType]:
        """Gets the events of this CreatedWebhookData.

        Subscribed event types.  # noqa: E501

        :return: The events of this CreatedWebhookData.
        :rtype: List[WebhookType]
        """
        return self._events

    @events.setter
    def events(self, events: List[WebhookType]):
        """Sets the events of this CreatedWebhookData.

        Subscribed event types.  # noqa: E501

        :param events: The events of this CreatedWebhookData.
        :type events: List[WebhookType]
        """

        self._events = events

    @property
    def url(self) -> str:
        """Gets the url of this CreatedWebhookData.

        Url where the webhook notification is sent.  # noqa: E501

        :return: The url of this CreatedWebhookData.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this CreatedWebhookData.

        Url where the webhook notification is sent.  # noqa: E501

        :param url: The url of this CreatedWebhookData.
        :type url: str
        """

        self._url = url

    @property
    def signature_secret_key(self) -> str:
        """Gets the signature_secret_key of this CreatedWebhookData.

        Signing key for verifying that sender is actually Polar.  # noqa: E501

        :return: The signature_secret_key of this CreatedWebhookData.
        :rtype: str
        """
        return self._signature_secret_key

    @signature_secret_key.setter
    def signature_secret_key(self, signature_secret_key: str):
        """Sets the signature_secret_key of this CreatedWebhookData.

        Signing key for verifying that sender is actually Polar.  # noqa: E501

        :param signature_secret_key: The signature_secret_key of this CreatedWebhookData.
        :type signature_secret_key: str
        """

        self._signature_secret_key = signature_secret_key
