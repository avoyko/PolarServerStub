openapi: 3.0.0
info:
  title: Polar AccessLink API
  description: Polar AccessLink API documentation
  contact:
    name: Support
    url: https://www.polar.com/accesslink
    email: b2bhelpdesk@polar.com
  license:
    name: Polar Electro AccessLink Limited License Agreement
    url: https://www.polar.com/sites/default/files/static/ACL_Ltd_License_Agreement.pdf
  version: "3"
servers:
  - url: https://www.polaraccesslink.com/
tags:
  - name: Users
    description: This resource provides all the necessary functions to manage users.
  - name: Pull notifications
    description: This resource allows partners to check if their users have available
      data for downloading. Use client credentials authentication. Returns object holding
      list of available data objects.
  - name: Daily activity
    description: "This resource allows partners to access their users' daily activity\
    \ data. During the transfer, the activity data is copied also into the AccessLink\
    \ database so the end-users cannot change the data that is accessible via AccessLink\
    \ afterwards. Begin and end of day are determined by the time set on the device\
    \ used. No timezone information is available. Each transaction will consist of\
    \ at most 50 activity summaries. Available data presented in section [Schemas](#schemas).\
    \ Only data that has been uploaded to Flow after the user has been registered\
    \ to your client will be available. Only data that has been uploaded in the last\
    \ 30 days will be available."
  - name: Training data
    description: "This resource allows partners to access their users' training data.\
    \ All time values are UTC except start-time. Start-time is the time set on the\
    \ training computer. Each transaction will consist of at most 50 training sessions.\
    \ Available data presented in section [Schemas](#schemas). Only data that has\
    \ been uploaded to Flow after the user has been registered to your client will\
    \ be available. Only data that has been uploaded in the last 30 days will be available."
  - name: Physical info
    description: "This resource allows partners to access their users' physical information.\
    \ Whenever some user's physical information changes, new entry containing full\
    \ physical info is stored to AccessLink. Pull notifications can be used to check\
    \ if user have new physical information available. Available data presented in\
    \ section [Schemas](#schemas)."
  - name: Continuous Heart Rate
    description: "This resource allows partners to access their users' continuous heart\
    \ rate data. Continuous heart rate is recorded with supported devices when the\
    \ heart rate tracking is turned on in device settings. Samples are recording in\
    \ 5 minute intervals. Heart rate samples from training sessions are not available\
    \ through this resource. Training sessions samples have more precise sampling\
    \ interval and they can be accessed from the [training data resource](#training-data).\
    \ <a href=\"https://support.polar.com/en/support/the_what_and_how_of_polars_continuous_heart_rate\"\
    >Supported devices</a>"
  - name: Sleepwise&trade; (Beta)
    description: "This resource allows partners to access their users' SleepWise&trade;\
    \ data. All time values are UTC times. SleepWise&trade; data is calculated for\
    \ [SleepWise&trade;](https://support.polar.com/en/polar-sleepwise) supported devices\
    \ when minimum of 5 days of sleep data is available. SleepWise&trade; data consists\
    \ of alertness periods and circadian bedtime periods."
  - name: Elixir&trade; Biosensing (Beta)
    description: "This resource allows partners to access their users' Elixir&trade;\
    \ Biosensing data. All time values are UTC times. Elixir&trade; Biosensing data\
    \ consists of body temperature data, sleep skin temperature data, skin contacts\
    \ data, wrist ECG test report data and SpO2 test report data."
  - name: Webhooks
    description: "Webhook resources provides endpoints for creating, modifying and deleting\
    \ webhooks."
  - name: Exercises
    description: "Resources for getting information about exercise. These endpoints\
    \ does not require active transaction, but they use hashed id."
  - name: Sleep
    description: "Sleep endpoints support [Polar Sleep Plus&trade;](https://www.polar.com/en/smart-coaching/polar-sleep-plus)\
    \ and [Sleep Plus Stages&trade;](https://www.polar.com/en/smart-coaching/sleep-plus-stages).\
    \ Available data is presented in section [Schemas](#schemas)."
  - name: Cardio load (Beta)
    description: "Cardio load is based on training impulse calculation (TRIMP), a commonly\
    \ accepted and scientifically proven method to quantify training load. Your Cardio\
    \ load value tells you how much strain your training session put on your cardiovascular\
    \ system.  The higher the Cardio load, the more strenuous the training session\
    \ was for the cardiovascular system.  Cardio load is calculated after every workout\
    \ from your heart rate data and session duration. For more detailed information\
    \ please check [cardio load](https://support.polar.com/e_manuals/unite/polar-unite-user-manual-english/cardio-load.htm)."
paths:
  /v3/exercises:
    get:
      tags:
        - Exercises
      summary: List exercises
      description: |-
        List users exercises available in AccessLink. Only Exercises uploaded to Flow in the last 30 days are returned. Only exercises that have been uploaded to Flow after the user is registered with your client will be returned. Use samples and zones query parameters to return optional samples and zone information of the exercises.
        Training Load Pro data will be included in the exercise object if the exercise is recorded with a specific wrist unit model,  please check [compatible devices](https://www.polar.com/en/smart-coaching/training-load-pro) for more information.
      operationId: list_exercises_without_transaction
      parameters:
        - name: samples
          in: query
          description: Return all sample data for this exercise.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: zones
          in: query
          description: Return all zones data for this exercise.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: route
          in: query
          description: Return all route data for this exercise.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        "200":
          description: List of users exercises.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exercisesHashId'
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.exercises_controller
  /v3/exercises/{exerciseId}:
    get:
      tags:
        - Exercises
      summary: Get exercise
      description: Get users exercise using hashed id. Only Exercises uploaded to
        Flow in the last 30 days are available. Only exercises that have been uploaded
        to Flow after the user is registered with your client will be available. Use
        samples and zones query parameters to return optional samples and zone information
        of the exercise.
      operationId: get_exercise_without_transaction
      parameters:
        - name: exerciseId
          in: path
          description: Hashed exercise id.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: samples
          in: query
          description: Return all sample data for this exercise.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: zones
          in: query
          description: Return all zones data for this exercise.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: route
          in: query
          description: Return all route data for this exercise.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        "200":
          description: Exercise information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exerciseHashId'
        "403":
          description: User has not accepted all mandatory consents.
        "404":
          description: Exercise not found.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.exercises_controller
  /v3/exercises/{exerciseId}/fit:
    get:
      tags:
        - Exercises
      summary: Get exercise FIT
      description: "FIT file for users exercise. Only Exercises uploaded to Flow in\
        \ the last 30 days are available. Only exercises that have been uploaded to\
        \ Flow after the user is registered with your client will be available. See\
        \ [FIT sport mappings in appendix](#sport-type-mapping-in-fit-files)."
      operationId: get_exercise_fit_without_transaction
      parameters:
        - name: exerciseId
          in: path
          description: Hashed exercise id.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Return FIT file.
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
        "403":
          description: User has not accepted all mandatory consents.
        "404":
          description: Exercise not found.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.exercises_controller
  /v3/exercises/{exerciseId}/tcx:
    get:
      tags:
        - Exercises
      summary: Get exercise TCX
      description: TCX file for users exercise without an AccessLink "transaction".
        Only Exercises uploaded to Flow in the last 30 days are available. Only exercises
        that have been uploaded to Flow after the user is registered with your client
        will be available.
      operationId: get_exercise_tcx_without_transaction
      parameters:
        - name: exerciseId
          in: path
          description: Hashed exercise id.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Return gzipped TCX.
          content:
            application/vnd.garmin.tcx+xml:
              schema:
                type: string
                x-content-type: application/vnd.garmin.tcx+xml
        "403":
          description: User has not accepted all mandatory consents.
        "404":
          description: Exercise not found.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.exercises_controller
  /v3/exercises/{exerciseId}/gpx:
    get:
      tags:
        - Exercises
      summary: Get exercise GPX
      description: GPX file for users exercise without an AccessLink "transaction".
        Only Exercises uploaded to Flow in the last 30 days are available. Only exercises
        that have been uploaded to Flow after the user is registered with your client
        will be available.
      operationId: get_exercise_gpx_without_transaction
      parameters:
        - name: exerciseId
          in: path
          description: Hashed exercise id.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Return exercise in GPX (GPS Exchange format).
          content:
            application/gpx+xml:
              schema:
                type: string
                x-content-type: application/gpx+xml
        "403":
          description: User has not accepted all mandatory consents.
        "404":
          description: Exercise not found.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.exercises_controller
  /v3/users:
    post:
      tags:
        - Users
      summary: Register user
      description: "Once partner has been authorized by user, partner must register\
        \ the user before being able to access its data. API user-id and Polar User\
        \ Id (polar-user-id) are interchangeable terms."
      operationId: register_user
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/register'
          application/json:
            schema:
              $ref: '#/components/schemas/register'
        required: true
      responses:
        "200":
          description: User's base information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
        "204":
          description: No content when user with given userId is not found.
        "403":
          description: User has not accepted all mandatory consents.
        "409":
          description: User already registered to partner or duplicated member-id.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /v3/users/{user-id}:
    get:
      tags:
        - Users
      summary: Get user information
      description: |-
        List user basic information.
        Note: Although it is possible to get users weight and height from this resource, the [get physical info](#get-physical-info) should be used instead.
      operationId: get_user_information
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
            format: int64
          example: 475
      responses:
        "200":
          description: User's base information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
        "204":
          description: No content when user with given userId is not found.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.users_controller
    delete:
      tags:
        - Users
      summary: Delete user
      description: "When partner wishes no longer to receive user data, user can be\
        \ de-registered.This will revoke the access token authorized by user."
      operationId: delete_user
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
            format: int64
      responses:
        "204":
          description: will be returned when user is successfully de-registered.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /v3/notifications:
    get:
      tags:
        - Pull notifications
      summary: List
      description: Get list of available exercises and activities for users
      operationId: list
      responses:
        "200":
          description: List of available data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/available-user-datas'
            application/xml:
              schema:
                $ref: '#/components/schemas/available-user-datas'
        "204":
          description: No content when no available data found
      security:
        - Basic: []
      x-openapi-router-controller: swagger_server.controllers.pull_notifications_controller
  /v3/users/{user-id}/exercise-transactions:
    post:
      tags:
        - Training data
      summary: Create transaction
      description: Check for new training data and create a new transaction if found.
        Only data uploaded to Flow in the last 30 days will be available. Only data
        that has been uploaded to Flow after the user is registered with your client
        will be available.
      operationId: create_exercise_transaction
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
      responses:
        "201":
          description: Return link to created transaction containing new training
            session data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction-location'
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction-location'
        "204":
          description: No content when there is no new training session data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.training_data_controller
  /v3/users/{user-id}/exercise-transactions/{transaction-id}:
    get:
      tags:
        - Training data
      summary: List exercises
      description: "After successfully initiating a transaction, training sessions\
        \ included within it can be retrieved with the provided transactionId."
      operationId: list_exercises
      parameters:
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
            format: int64
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
      responses:
        "200":
          description: Return list of hyperlinks to training sessions contained within
            the transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exercises'
            application/xml:
              schema:
                $ref: '#/components/schemas/exercises'
              example:
                exercises:
                  exercise:
                    - https://www.polaraccesslink.com/v3/users/12/exercise-transactions/34/exercises/56
                    - https://www.polaraccesslink.com/v3/users/12/exercise-transactions/34/exercises/120
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.training_data_controller
    put:
      tags:
        - Training data
      summary: Commit transaction
      description: "After successfully retrieving training session data within a transaction,\
        \ partners are expected to commit the transaction."
      operationId: commit_exercise_transaction
      parameters:
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
            format: int64
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
      responses:
        "200":
          description: Transaction has been committed and data deleted.
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
        "404":
          description: No transaction was found with given transaction id.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.training_data_controller
  /v3/users/{user-id}/exercise-transactions/{transaction-id}/exercises/{exercise-id}:
    get:
      tags:
        - Training data
      summary: Get exercise summary
      description: Retrieve training session summary data
      operationId: get_exercise_summary
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: exercise_id
          in: path
          description: Exercise identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Exercise summary.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exercise'
            application/xml:
              schema:
                $ref: '#/components/schemas/exercise'
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.training_data_controller
  /v3/users/{user-id}/exercise-transactions/{transaction-id}/exercises/{exercise-id}/fit:
    get:
      tags:
        - Training data
      summary: Get FIT
      description: "Retrieve exercise in FIT format. See [FIT sport mappings in appendix](#sport-type-mapping-in-fit-files)."
      operationId: get_fit
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: exercise_id
          in: path
          description: Exercise identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Return FIT file.
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
        "204":
          description: No FIT available for exercise.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.training_data_controller
  /v3/users/{user-id}/exercise-transactions/{transaction-id}/exercises/{exercise-id}/gpx:
    get:
      tags:
        - Training data
      summary: Get GPX
      description: Retrieve training session summary data in GPX format
      operationId: get_gpx
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: exercise_id
          in: path
          description: Exercise identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: includePauseTimes
          in: query
          description: Whether to add pauses as part of the route. Default is false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Return training session in GPX (GPS Exchange format).
          content:
            application/gpx+xml:
              schema:
                type: string
                x-content-type: application/gpx+xml
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.training_data_controller
  /v3/users/{user-id}/exercise-transactions/{transaction-id}/exercises/{exercise-id}/heart-rate-zones:
    get:
      tags:
        - Training data
      summary: Get heart rate zones
      description: Retrieve heart rate zones in training session
      operationId: get_heart_rate_zones
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: exercise_id
          in: path
          description: Exercise identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Return heart rate zones in training session.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones'
            application/xml:
              schema:
                $ref: '#/components/schemas/zones'
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.training_data_controller
  /v3/users/{user-id}/exercise-transactions/{transaction-id}/exercises/{exercise-id}/samples:
    get:
      tags:
        - Training data
      summary: Get available samples
      description: Retrieve list of links to available samples in training session
      operationId: get_available_samples
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: exercise_id
          in: path
          description: Exercise identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Return list of hyperlinks to available samples in training
            session.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/samples'
            application/xml:
              schema:
                $ref: '#/components/schemas/samples'
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.training_data_controller
  /v3/users/{user-id}/exercise-transactions/{transaction-id}/exercises/{exercise-id}/samples/{type-id}:
    get:
      tags:
        - Training data
      summary: Get samples
      description: Retrieve sample data of given type
      operationId: get_samples
      parameters:
        - name: type_id
          in: path
          description: Sample type id
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: string
            format: byte
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: exercise_id
          in: path
          description: Exercise identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Return sample data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sample'
            application/xml:
              schema:
                $ref: '#/components/schemas/sample'
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.training_data_controller
  /v3/users/{user-id}/exercise-transactions/{transaction-id}/exercises/{exercise-id}/tcx:
    get:
      tags:
        - Training data
      summary: Get TCX
      description: Retrieve exercise in TCX format
      operationId: get_tcx
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: exercise_id
          in: path
          description: Exercise identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Return gzipped TCX.
          content:
            application/vnd.garmin.tcx+xml:
              schema:
                type: string
                x-content-type: application/vnd.garmin.tcx+xml
        "204":
          description: No TCX available for exercise.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.training_data_controller
  /v3/users/{user-id}/activity-transactions:
    post:
      tags:
        - Daily activity
      summary: Create transaction
      description: |-
        Initiate activity transaction.
        Check for new activity summaries and create a new transaction if found.
        Only data uploaded to Flow in the last 30 days will be available.
        Only data that has been uploaded to Flow after the user is registered with your client will be available.
      operationId: create_activity_transaction
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
      responses:
        "201":
          description: Return link to created transaction containing new activity
            data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction-location'
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction-location'
        "204":
          description: No content when there is no new activity data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.daily_activity_controller
  /v3/users/{user-id}/activity-transactions/{transaction-id}:
    get:
      tags:
        - Daily activity
      summary: List activities
      description: |-
        List new activity data.
        After successfully initiating a transaction, activity summaries included within it can be retrieved with the provided transactionId.
      operationId: list_activities
      parameters:
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
            format: int64
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
      responses:
        "200":
          description: Return list of hyperlinks to activity summaries contained within
            the transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activity-log'
            application/xml:
              schema:
                $ref: '#/components/schemas/activity-log'
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
        "404":
          description: No transaction was found with given transaction id.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.daily_activity_controller
    put:
      tags:
        - Daily activity
      summary: Commit transaction
      description: "After successfully retrieving activity summary data within a transaction,\
        \ partners are expected to commit the transaction."
      operationId: commit_activity_transaction
      parameters:
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
            format: int64
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[0-9]+"
            type: integer
      responses:
        "200":
          description: Transaction has been committed and data deleted.
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.daily_activity_controller
  /v3/users/{user-id}/activity-transactions/{transaction-id}/activities/{activity-id}:
    get:
      tags:
        - Daily activity
      summary: Get activity summary
      description: ""
      operationId: get_activity_summary
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: activity_id
          in: path
          description: Activity summary identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Return activity summary contained within the transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activity'
            application/xml:
              schema:
                $ref: '#/components/schemas/activity'
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.daily_activity_controller
  /v3/users/{user-id}/activity-transactions/{transaction-id}/activities/{activity-id}/step-samples:
    get:
      tags:
        - Daily activity
      summary: Get step samples
      description: "Get activity step samples. Example data can be seen from [appendix](#activity-step-time-series)."
      operationId: get_step_samples
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: activity_id
          in: path
          description: Activity summary identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Return activity step samples.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activity-step-samples'
            application/xml:
              schema:
                $ref: '#/components/schemas/activity-step-samples'
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.daily_activity_controller
  /v3/users/{user-id}/activity-transactions/{transaction-id}/activities/{activity-id}/zone-samples:
    get:
      tags:
        - Daily activity
      summary: Get zone samples
      description: "Get activity zone samples. Example data can be seen from [appendix](#activity-zone-time-series)."
      operationId: get_zone_samples
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: activity_id
          in: path
          description: Activity summary identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Return activity zone samples.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activity-zone-samples'
            application/xml:
              schema:
                $ref: '#/components/schemas/activity-zone-samples'
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.daily_activity_controller
  /v3/users/{user-id}/physical-information-transactions:
    post:
      tags:
        - Physical info
      summary: Create transaction
      description: |-
        Initiate physical info transaction.
        Check for new physical info and create a new transaction if found.
      operationId: create_physical_info_transaction
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "201":
          description: Return link to created transaction containing new physical
            info data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction-location'
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction-location'
        "204":
          description: No content when there is no new physical info data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.physical_info_controller
  /v3/users/{user-id}/physical-information-transactions/{transaction-id}:
    get:
      tags:
        - Physical info
      summary: List physical infos
      description: |-
        List new physical info data.
        After successfully initiating a transaction, physical infos included within it can be retrieved with the provided transactionId.
      operationId: list_physical_infos
      parameters:
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Return list of hyperlinks to physical information contained
            within the transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/physical-informations'
            application/xml:
              schema:
                $ref: '#/components/schemas/physical-informations'
              example:
                physical-informations:
                  physical-information:
                    - https://www.polaraccesslink.com/v3/users/12/physical-information-transactions/12/physical-informations/56
                    - https://www.polaraccesslink.com/v3/users/12/physical-information-transactions/12/physical-informations/120
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
        "404":
          description: No transaction was found with given transaction id.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.physical_info_controller
    put:
      tags:
        - Physical info
      summary: Commit transaction
      description: "After successfully retrieving physical information within a transaction,\
        \ partners are expected to commit the transaction."
      operationId: commit_physical_info_transaction
      parameters:
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Transaction has been committed and data deleted.
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.physical_info_controller
  /v3/users/{user-id}/physical-information-transactions/{transaction-id}/physical-informations/{physical-info-id}:
    get:
      tags:
        - Physical info
      summary: Get physical info
      description: Get physical info entity data
      operationId: get_physical_info
      parameters:
        - name: user_id
          in: path
          description: User identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: transaction_id
          in: path
          description: Transaction identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: physical_info_id
          in: path
          description: Physical information identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Physical information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/physical-information'
            application/xml:
              schema:
                $ref: '#/components/schemas/physical-information'
        "204":
          description: No content when there is no data available.
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.physical_info_controller
  /v3/webhooks:
    get:
      tags:
        - Webhooks
      summary: Get webhook
      description: Returns created webhook if exists.
      operationId: get_webhook
      responses:
        "200":
          description: Existing webhook.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhookInfo'
      security:
        - Basic: []
      x-openapi-router-controller: swagger_server.controllers.webhooks_controller
    post:
      tags:
        - Webhooks
      summary: Create webhook
      description: |-
        Create new webhook.

        When creating webhook the AccessLink sends a ping message to the url in request body. The ping message must be answered with 200 OK or otherwise the webhook is not created.

        Created webhook is by default in activated state and will send push notifications about subscribed events. Webhook will be automatically deactivated if push notifications have not been successful for a period of seven (7) days.
        **Note!** Save the *signature_secret_key* from response since this is the only chance to get it.
      operationId: create_webhook
      requestBody:
        description: Webhook to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhookRequest'
        required: true
      responses:
        "201":
          description: Created webhook.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createdWebhook'
        "400":
          description: Webhook cannot be created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "409":
          description: Webhook already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - Basic: []
      x-openapi-router-controller: swagger_server.controllers.webhooks_controller
  /v3/webhooks/activate:
    post:
      tags:
        - Webhooks
      summary: Activate webhook
      description: Activate deactivated webhook. Activation is successful if the configured
        webhook url returns HTTP status 200 (OK) for the issued ping request.
      operationId: v3_webhooks_activate_post
      responses:
        "200":
          description: Webhook has been successfully activated.
        "204":
          description: Webhook does not exits and it cannot be activated.
      security:
        - Basic: []
      x-openapi-router-controller: swagger_server.controllers.webhooks_controller
  /v3/webhooks/deactivate:
    post:
      tags:
        - Webhooks
      summary: Deactivate webhook
      description: Deactivate activated webhook. Deactivated webhook does not push
        notifications about subscribed events.
      operationId: v3_webhooks_deactivate_post
      responses:
        "200":
          description: Webhook has been successfully deactivated.
        "204":
          description: Webhook does not exits and it cannot be deactivated.
      security:
        - Basic: []
      x-openapi-router-controller: swagger_server.controllers.webhooks_controller
  /v3/webhooks/{webhook-id}:
    delete:
      tags:
        - Webhooks
      summary: Delete webhook
      description: Delete webhook by id.
      operationId: delete_webhook
      parameters:
        - name: webhook_id
          in: path
          description: Webhook id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "204":
          description: Webhook deleted successfully.
        "404":
          description: Webhook not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - Basic: []
      x-openapi-router-controller: swagger_server.controllers.webhooks_controller
    patch:
      tags:
        - Webhooks
      summary: Update webhook
      description: |-
        Edit webhook event types and/or url.

        When updating webhook url the AccessLink sends a ping message to the new address. The ping message must be answered with 200 OK or otherwise the webhook is not updated.
      operationId: update_webhook
      parameters:
        - name: webhook_id
          in: path
          description: Webhook id to update
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: New value(s) for events and/or url.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhookPatch'
        required: true
      responses:
        "200":
          description: Webhook updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhookInfo'
        "400":
          description: Webhook cannot be updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: Webhook not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        - Basic: []
      x-openapi-router-controller: swagger_server.controllers.webhooks_controller
  /v3/users/sleep:
    get:
      tags:
        - Sleep
      summary: List nights
      description: List sleep data of user for the last 28 days.
      operationId: list_nights
      responses:
        "200":
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nights'
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.sleep_controller
  /v3/users/sleep/{date}:
    get:
      tags:
        - Sleep
      summary: Get Sleep
      description: Get Users sleep data for given date.
      operationId: v3_users_sleep_date_get
      parameters:
        - name: date
          in: path
          description: "Date of sleep as ISO-8601 date string, example: \"2020-01-01\""
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sleep'
        "400":
          description: Invalid date.
        "403":
          description: User has not accepted all mandatory consents.
        "404":
          description: No data found for date.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.sleep_controller
  /v3/users/sleep/available:
    get:
      tags:
        - Sleep
      summary: Get available sleep times
      description: "Get the dates with sleep start and end times, where user has sleep\
        \ data available in the last 28 days."
      operationId: v3_users_sleep_available_get
      responses:
        "200":
          description: Request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/available-sleeps'
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.sleep_controller
  /v3/users/nightly-recharge:
    get:
      tags:
        - Nightly Recharge
      summary: List Nightly Recharges
      description: List Nightly Recharge data of user for the last 28 days.
      operationId: list_nightly_recharge
      responses:
        "200":
          description: Request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recharges'
        "403":
          description: User has not accepted all mandatory consents.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.nightly_recharge_controller
  /v3/users/nightly-recharge/{date}:
    get:
      tags:
        - Nightly Recharge
      summary: Get Nightly Recharge
      description: Get Users Nightly Recharge data for given date.
      operationId: v3_users_nightly_recharge_date_get
      parameters:
        - name: date
          in: path
          description: "Date of Nightly Recharge as ISO-8601 date string, example: \"\
          2020-01-01\""
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nightly-recharge'
        "400":
          description: Invalid date.
        "403":
          description: User has not accepted all mandatory consents.
        "404":
          description: No data found for date.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.nightly_recharge_controller
  /v3/users/continuous-heart-rate/{date}:
    get:
      tags:
        - Continuous Heart Rate
      summary: Get Continuous Heart rate samples
      description: Get users continuous heart rate values for given date. <a href="https://support.polar.com/en/support/the_what_and_how_of_polars_continuous_heart_rate">
        Supported devices </a>
      operationId: v3_users_continuous_heart_rate_date_get
      parameters:
        - name: date
          in: path
          description: "Date of Continuous Heart Rate as ISO-8601 date string, example:\
          \ \"2022-01-01\""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/continuous-heartrate'
        "400":
          description: Invalid request.
        "401":
          description: Unauthorized.
        "403":
          description: User has not accepted all mandatory consents.
        "404":
          description: No data found for date.
      security:
        - OAuth2:
            - accesslink.read_all
      x-openapi-router-controller: swagger_server.controllers.continuous_heart_rate_controller
components:
  schemas:
    training-load-pro-rpe-enum:
      type: string
      description: Quantifies internal training load of a session.
      enum:
        - UNKNOWN
        - RPE_NONE
        - RPE_EASY
        - RPE_LIGHT
        - RPE_FAIRLY_BRISK
        - RPE_BRISK
        - RPE_MODERATE
        - RPE_FAIRLY_HARD
        - RPE_HARD
        - RPE_EXHAUSTING
        - RPE_EXTREME
    training-load-pro-load-enum:
      type: string
      enum:
        - UNKNOWN
        - VERY_LOW
        - LOW
        - MEDIUM
        - HIGH
        - VERY_HIGH
        - NOT_AVAILABLE
    training-load-pro-sample:
      type: object
      properties:
        date:
          type: string
          description: Date in format YYYY-MM-DD.
          format: date
          example: 2023-01-01
        cardio-load:
          type: number
          description: User cardio load value.
          format: float
          example: 1
        muscle-load:
          type: number
          description: User muscle load value.
          format: float
          example: 1
        perceived-load:
          type: number
          description: User perceived load value.
          format: float
          example: 1
        cardio-load-interpretation:
          $ref: '#/components/schemas/training-load-pro-load-enum'
        muscle-load-interpretation:
          $ref: '#/components/schemas/training-load-pro-load-enum'
        perceived-load-interpretation:
          $ref: '#/components/schemas/training-load-pro-load-enum'
        user-rpe:
          $ref: '#/components/schemas/training-load-pro-rpe-enum'
      example:
        date: 2023-01-01T00:00:00.000+00:00
        perceived-load-interpretation: null
        cardio-load: 1
        muscle-load: 1
        cardio-load-interpretation: UNKNOWN
        user-rpe: UNKNOWN
        perceived-load: 1
        muscle-load-interpretation: null
    cardio-load-schema:
      type: array
      description: List of cardio loads.
      items:
        $ref: '#/components/schemas/cardio-load'
    cardio-load:
      properties:
        date:
          type: string
          description: Date in format YYYY-MM-DD.
          format: date
          example: 2023-01-01
        cardio_load_status:
          $ref: '#/components/schemas/cardio-load-status-enum'
        cardio_load:
          type: number
          description: "Cardio load (training impulse, TRIMP) shows your cardiac response\
            \ to a training session."
          format: float
          example: 0.2
        strain:
          type: number
          description: Strain shows how much you have strained yourself with training
            lately. It shows your average daily load from the past 7 days.
          format: float
          example: 0.3
        tolerance:
          type: number
          description: Tolerance describes how prepared you are to endure cardio training.
            It shows your average daily load from the past 28 days.
          format: float
          example: 0.4
        cardio_load_ratio:
          type: number
          description: Ratio between strain and tolerance.
          format: float
          example: 0.1
        cardio_load_level:
          $ref: '#/components/schemas/cardio-load-levels'
      description: Cardio load model.
      example:
        date: 2023-01-01T00:00:00.000+00:00
        strain: 0.3
        cardio_load_ratio: 0.1
        cardio_load_level:
          high: 0.1
          very-high: 0.1
          very_low: 0.1
          low: 0.1
          medium: 0.1
        cardio_load: 0.2
        cardio_load_status: LOAD_STATUS_NOT_AVAILABLE
        tolerance: 0.4
    cardio-load-status-enum:
      type: string
      description: Text representation of cardio load status.
      enum:
        - LOAD_STATUS_NOT_AVAILABLE
        - DETRAINING
        - MAINTAINING
        - PRODUCTIVE
        - OVERREACHING
        - UNRECOGNIZED
    cardio-load-levels:
      type: object
      properties:
        very_low:
          type: number
          format: float
          example: 0.1
        low:
          type: number
          format: float
          example: 0.1
        medium:
          type: number
          format: float
          example: 0.1
        high:
          type: number
          format: float
          example: 0.1
        very-high:
          type: number
          format: float
          example: 0.1
      description: Cardio load levels indicate how hard a training session was compared
        to your session average from the past 90 days.
      example:
        high: 0.1
        very-high: 0.1
        very_low: 0.1
        low: 0.1
        medium: 0.1
    AvailableUserData:
      type: object
      properties:
        user-id:
          type: integer
          description: User identifier who has available data.
          format: int64
          example: 475
        data-type:
          type: string
          description: Type of available data.
          example: ACTIVITY_SUMMARY
          enum:
            - EXERCISE
            - ACTIVITY_SUMMARY
            - PHYSICAL_INFORMATION
        url:
          type: string
          description: URI pointing to transaction initiation endpoint for user
          example: https://www.polaraccesslink.com/v3/users/475/activity-transactions
      description: Model contains information of the data available.
      example:
        user-id: 475
        data-type: ACTIVITY_SUMMARY
        url: https://www.polaraccesslink.com/v3/users/475/activity-transactions
      xml:
        name: available-user-data
    DurationZone:
      type: object
      properties:
        index:
          type: integer
          description: Activity zone index
          format: int32
          example: 1
          xml:
            attribute: true
        inzone:
          type: string
          description: Time duration spent in the zone ISO 8601
          example: PT51M5S
      description: Model contains the time spent in certain activity zone.
      example:
        inzone: PT51M5S
        index: 1
      xml:
        name: activity-zones
    HeartRate:
      type: object
      properties:
        average:
          type: integer
          description: Average heart-rate
          format: int32
          example: 129
        maximum:
          type: integer
          description: Maximum heart-rate
          format: int32
          example: 147
      description: Heart-rate statistics information
      example:
        average: 129
        maximum: 147
    UserExtraInfo:
      type: object
      properties:
        value:
          type: string
          description: Value provided by the customer
          example: "2"
        index:
          type: integer
          description: Item index
          format: int32
          example: 0
          xml:
            attribute: true
        name:
          type: string
          description: Name of the extra info asked from customer
          example: number-of-children
          xml:
            attribute: true
      description: User's answers to the custom extra-info fields requested by partners
      example:
        name: number-of-children
        index: 0
        value: "2"
      xml:
        name: extra-info
    activity:
      type: object
      properties:
        id:
          type: integer
          description: Activity summary id
          format: int64
          example: 1234
          xml:
            attribute: true
        polar-user:
          type: string
          description: Absolute link to user owning the activity
          example: https://www.polaraccesslink/v3/users/1
          xml:
            attribute: true
        transaction-id:
          type: integer
          description: Id of the activity-transaction this training was transferred
            in
          format: int64
          example: 179879
          xml:
            attribute: true
        date:
          type: string
          description: "Date when activity summary was recorded, in format YYYY-MM-DD"
          example: 2010-12-31
        created:
          type: string
          description: "The time activity summary was created in AccessLink, in format\
            \ YYYY-MM-DDTHH:mm:ss.SSS"
          example: 2016-04-27T20:11:33.000Z
        calories:
          type: integer
          description: Total daily calories in kilo calories including BMR
          format: int32
          example: 2329
        active-calories:
          type: integer
          description: Total daily calories not including BMR. Precise calculation
            requires that user's physical data is entered into Polar Flow
          format: int32
          example: 428
        duration:
          type: string
          description: The time interval as specified in ISO 8601
          example: PT2H44M
        active-steps:
          type: integer
          description: You could consider this as a kind of activity unit. If you
            take one step the active-steps should increase by one and any activity
            comparable to one physical step would also increase the number by one
          format: int32
          example: 250
      description: Summary of user's daily activity
      example:
        date: 2010-12-31
        active-calories: 428
        duration: PT2H44M
        transaction-id: 179879
        created: 2016-04-27T20:11:33.000Z
        polar-user: https://www.polaraccesslink/v3/users/1
        id: 1234
        calories: 2329
        active-steps: 250
      xml:
        name: activity
    activity-log:
      type: object
      properties:
        activity-log:
          type: array
          description: Absolute links to individual activity summaries within the
            transaction
          example:
            - https://www.polaraccesslink.com/v3/users/12/activity-transactions/34/activities/56
            - https://www.polaraccesslink.com/v3/users/12/activity-transactions/34/activities/120
          items:
            type: string
      description: Activity transaction container
      example:
        activity-log:
          - https://www.polaraccesslink.com/v3/users/12/activity-transactions/34/activities/56
          - https://www.polaraccesslink.com/v3/users/12/activity-transactions/34/activities/120
      xml:
        name: activity-logs
    activity-step-sample:
      type: object
      properties:
        steps:
          type: integer
          description: "Number of steps in sample segment. If element is null, step\
            \ samples are not available for current segment."
          format: int32
        time:
          type: string
          description: Start time of sample segment.
          example: 12:37:33.000
      description: Model contains number of steps in certain time period.
      example:
        time: 12:37:33.000
        steps: 6
      xml:
        name: sample
    activity-step-samples:
      type: object
      properties:
        date:
          type: string
          description: Activity step sample date
          example: 2022-02-10
        interval:
          type: integer
          description: Sample interval in minutes.
          format: int32
        samples:
          type: array
          description: List of individual step sample objects.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/activity-step-sample'
      description: Wrapper model for partner step samples.
      example:
        date: 2022-02-10
        interval: 0
        samples:
          - time: 12:37:33.000
            steps: 6
          - time: 12:37:33.000
            steps: 6
      xml:
        name: activity-step-samples
    activity-zone-sample:
      type: object
      properties:
        activity-zones:
          type: array
          description: List of heart rate zones with duration.
          items:
            $ref: '#/components/schemas/DurationZone'
        time:
          type: string
          description: Start time of sample segment.
      description: Model contains number of steps in certain time period.
      example:
        activity-zones:
          - inzone: PT51M5S
            index: 1
          - inzone: PT51M5S
            index: 1
        time: time
      xml:
        name: sample
    activity-zone-samples:
      type: object
      properties:
        date:
          type: string
          description: Activity zone sample date
          example: 2022-02-10
        interval:
          type: integer
          description: Sample interval in minutes.
          format: int32
        samples:
          type: array
          description: List of individual zone sample objects.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/activity-zone-sample'
      description: List containing the times (in zone) in different heart rate zones
        (i.e. Heart rate between lower and upper values). Zone is null if no zone
        information available.
      example:
        date: 2022-02-10
        interval: 0
        samples:
          - activity-zones:
              - inzone: PT51M5S
                index: 1
              - inzone: PT51M5S
                index: 1
            time: time
          - activity-zones:
              - inzone: PT51M5S
                index: 1
              - inzone: PT51M5S
                index: 1
            time: time
      xml:
        name: activity-zone-samples
    available-user-datas:
      type: object
      properties:
        available-user-data:
          type: array
          description: List of available user datas.
          items:
            $ref: '#/components/schemas/AvailableUserData'
      description: 'AvailableUserDatas is a container model for AvailableUserData. '
      example:
        available-user-data:
          - user-id: 475
            data-type: ACTIVITY_SUMMARY
            url: https://www.polaraccesslink.com/v3/users/475/activity-transactions
          - user-id: 475
            data-type: ACTIVITY_SUMMARY
            url: https://www.polaraccesslink.com/v3/users/475/activity-transactions
      xml:
        name: available-user-datas
    error:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp of the error.
          format: date-time
        status:
          type: integer
          description: Http status code
        errorType:
          type: string
          description: Error type.
        message:
          type: string
          description: Human readable error message.
        corrId:
          type: string
          description: Correlation id of the response for problem solving and debugging
            use.
      description: Error model which contains useful info about the error occurred.
    exercise:
      type: object
      properties:
        id:
          type: integer
          description: Id of the trainining session
          format: int64
          example: 1937529874
          xml:
            attribute: true
        upload-time:
          type: string
          description: Time of the transfer from wrist unit to Polar database
          example: 2008-10-13T10:40:0.000Z
          xml:
            attribute: true
        polar-user:
          type: string
          description: Absolute link to Polar user owning the training
          example: https://www.polaraccesslink/v3/users/1
          xml:
            attribute: true
        transaction-id:
          type: integer
          description: Id of the exercise-transaction this training was transferred
            in
          format: int64
          example: 179879
          xml:
            attribute: true
        device:
          type: string
          description: Polar product used in training
          example: Polar M400
        device-id:
          type: string
          description: Id of the Polar device
          example: 1111AAAA
        start-time:
          type: string
          description: Start time of the training session in local time
          example: 2008-10-13T10:40:02
        start-time-utc-offset:
          type: integer
          description: The offset from UTC (in minutes) when the training session
            was started
          format: int32
          example: 180
        duration:
          type: string
          description: The duration of the training session as specified in ISO8601
          example: PT2H44M45S
        calories:
          type: integer
          description: Expended calories during training in kilocalories
          format: int32
          example: 530
        distance:
          type: number
          description: Distance in meters travelled during training
          format: float
          example: 1600.2
        heart-rate:
          $ref: '#/components/schemas/HeartRate'
        training-load:
          type: number
          description: Training load effect to user
          format: float
          example: 143.22
        sport:
          type: string
          description: Sport name
          example: OTHER
        has-route:
          type: boolean
          description: Boolean indicating if the exercise has route data
          example: true
        club-id:
          type: integer
          description: "Has value if the exercise is from \"Flow For Club\", otherwise\
            \ not printed. Value -1 indicates that there were errors finding the club"
          format: int64
          example: 999
        club-name:
          type: string
          description: "Has value if the exercise is from \"Flow For Club\", otherwise\
            \ not printed. Value \"Ambiguous club location. Please contact support.\"\
            \ is printed in case of error (and the club-id is -1)."
          example: Polar Club
        detailed-sport-info:
          type: string
          description: "String containing the name of a Polar Flow-compatible sport,\
            \ if one is set for the exercise."
          example: RUNNING
        fat-percentage:
          type: integer
          description: "Fat percentage of exercise calories. Has value if the exercise\
            \ is from training device supporting Energy sources, otherwise not printed."
          format: int32
          example: 60
        carbohydrate-percentage:
          type: integer
          description: "Carbohydrate percentage of exercise calories. Has value if\
            \ the exercise is from training device supporting Energy sources, otherwise\
            \ not printed."
          format: int32
          example: 38
        protein-percentage:
          type: integer
          description: "Protein percentage of exercise calories. Has value if the\
            \ exercise is from training device supporting Energy sources, otherwise\
            \ not printed."
          format: int32
          example: 2
        running-index:
          type: integer
          description: <a href="https://support.polar.com/en/support/tips/Running_Index_feature#">  Running
            index</a> is a score automatically calculated every run based on your  heart
            rate and speed data collected via GPS or stride sensor.
          format: int32
          example: 51
        training-load-pro:
          type: array
          items:
            $ref: '#/components/schemas/training-load-pro-sample'
      description: Training session summary data
      example:
        upload-time: 2008-10-13T10:40:0.000Z
        club-id: 999
        start-time: 2008-10-13T10:40:02
        training-load-pro:
          - date: 2023-01-01T00:00:00.000+00:00
            perceived-load-interpretation: null
            cardio-load: 1
            muscle-load: 1
            cardio-load-interpretation: UNKNOWN
            user-rpe: UNKNOWN
            perceived-load: 1
            muscle-load-interpretation: null
          - date: 2023-01-01T00:00:00.000+00:00
            perceived-load-interpretation: null
            cardio-load: 1
            muscle-load: 1
            cardio-load-interpretation: UNKNOWN
            user-rpe: UNKNOWN
            perceived-load: 1
            muscle-load-interpretation: null
        distance: 1600.2
        has-route: true
        heart-rate:
          average: 129
          maximum: 147
        fat-percentage: 60
        calories: 530
        detailed-sport-info: RUNNING
        device-id: 1111AAAA
        start-time-utc-offset: 180
        duration: PT2H44M45S
        transaction-id: 179879
        running-index: 51
        protein-percentage: 2
        club-name: Polar Club
        polar-user: https://www.polaraccesslink/v3/users/1
        id: 1937529874
        training-load: 143.22
        carbohydrate-percentage: 38
        device: Polar M400
        sport: OTHER
      xml:
        name: exercise
    exerciseHashId:
      type: object
      properties:
        id:
          type: string
          description: Hashed id of the trainining session
          example: 2AC312F
          xml:
            attribute: true
        upload_time:
          type: string
          description: Time of the transfer from wrist unit to Polar database
          example: 2008-10-13T10:40:02.000Z
          xml:
            attribute: true
        polar_user:
          type: string
          description: Absolute link to Polar user owning the training
          example: https://www.polaraccesslink/v3/users/1
          xml:
            attribute: true
        device:
          type: string
          description: Polar product used in training
          example: Polar M400
        device_id:
          type: string
          description: Id of the Polar device
          example: 1111AAAA
        start_time:
          type: string
          description: Start time of the training session in local time
          example: 2008-10-13T10:40:02
        start_time_utc_offset:
          type: integer
          description: The offset from UTC (in minutes) when the training session
            was started
          format: int32
          example: 180
        duration:
          type: string
          description: The duration of the training session as specified in ISO8601
          example: PT2H44M
        calories:
          type: integer
          description: Expended calories during training in kilocalories
          format: int32
          example: 530
        distance:
          type: number
          description: Distance in meters travelled during training
          format: float
          example: 1600
        heart_rate:
          $ref: '#/components/schemas/HeartRate'
        training_load:
          type: number
          description: Training load effect to user
          format: float
          example: 143.22
        sport:
          type: string
          description: Sport name
          example: OTHER
        has_route:
          type: boolean
          description: Boolean indicating if the exercise has route data
          example: true
        club_id:
          type: integer
          description: "Has value if the exercise is from \"Flow For Club\", otherwise\
            \ not printed. Value -1 indicates that there were errors finding the club"
          format: int64
          example: 999
        club_name:
          type: string
          description: "Has value if the exercise is from \"Flow For Club\", otherwise\
            \ not printed. Value \"Ambiguous club location. Please contact support.\"\
            \ is printed in case of error (and the club-id is -1)."
          example: Polar Club
        detailed_sport_info:
          type: string
          description: "String containing the name of a Polar Flow-compatible sport,\
            \ if one is set for the exercise."
          example: WATERSPORTS_WATERSKI
        fat_percentage:
          type: integer
          description: "Fat percentage of exercise calories. Has value if the exercise\
            \ is from training device supporting Energy sources, otherwise not printed."
          format: int32
          example: 60
        carbohydrate_percentage:
          type: integer
          description: "Carbohydrate percentage of exercise calories. Has value if\
            \ the exercise is from training device supporting Energy sources, otherwise\
            \ not printed."
          format: int32
          example: 38
        protein_percentage:
          type: integer
          description: "Protein percentage of exercise calories. Has value if the\
            \ exercise is from training device supporting Energy sources, otherwise\
            \ not printed."
          format: int32
          example: 2
        running-index:
          type: integer
          description: <a href="https://support.polar.com/en/support/tips/Running_Index_feature#">
            Running index</a> is a score automatically calculated every run based
            on your heart rate and speed data collected via GPS or stride sensor.
          format: int32
          example: 51
        heart_rate_zones:
          type: array
          description: Heart rate zones for this exercise. Returned when query parameter
            'zones=true' is used.
          items:
            $ref: '#/components/schemas/zone'
        samples:
          type: array
          description: List of all samples available for this exercise. Returned when
            query parameter 'samples=true' is used.
          items:
            $ref: '#/components/schemas/sample'
        route:
          type: array
          description: List of all route points/locations available for this exercise.
            Returned when query parameter 'route=true' is used.
          items:
            $ref: '#/components/schemas/location'
        training_load_pro:
          type: array
          items:
            $ref: '#/components/schemas/training-load-pro-sample'
      description: Training session summary data
      example:
        distance: 1600
        has_route: true
        training_load: 143.22
        duration: PT2H44M
        running-index: 51
        carbohydrate_percentage: 38
        id: 2AC312F
        detailed_sport_info: WATERSPORTS_WATERSKI
        heart_rate_zones:
          - lower-limit: 110
            upper-limit: 130
            in-zone: PT4S
            index: 1
          - lower-limit: 110
            upper-limit: 130
            in-zone: PT4S
            index: 1
        device_id: 1111AAAA
        heart_rate:
          average: 129
          maximum: 147
        calories: 530
        club_name: Polar Club
        samples:
          - recording-rate: 5
            data: "0,100,102,97,97,101,103,106,96,89,88,87,98,108,113,112,114,115,118,121,121,121,121,123,117,119,122"
          - recording-rate: 5
            data: "0,100,102,97,97,101,103,106,96,89,88,87,98,108,113,112,114,115,118,121,121,121,121,123,117,119,122"
        polar_user: https://www.polaraccesslink/v3/users/1
        fat_percentage: 60
        upload_time: 2008-10-13T10:40:02.000Z
        start_time: 2008-10-13T10:40:02
        route:
          - satellites: 4
            fix: 1
            latitude: 60.21982833
            time: PT210.026S
            longitude: 25.13925
          - satellites: 4
            fix: 1
            latitude: 60.21982833
            time: PT210.026S
            longitude: 25.13925
        protein_percentage: 2
        training_load_pro:
          - date: 2023-01-01T00:00:00.000+00:00
            perceived-load-interpretation: null
            cardio-load: 1
            muscle-load: 1
            cardio-load-interpretation: UNKNOWN
            user-rpe: UNKNOWN
            perceived-load: 1
            muscle-load-interpretation: null
          - date: 2023-01-01T00:00:00.000+00:00
            perceived-load-interpretation: null
            cardio-load: 1
            muscle-load: 1
            cardio-load-interpretation: UNKNOWN
            user-rpe: UNKNOWN
            perceived-load: 1
            muscle-load-interpretation: null
        club_id: 999
        device: Polar M400
        sport: OTHER
        start_time_utc_offset: 180
    exercisesHashId:
      type: array
      description: List of exercises.
      items:
        $ref: '#/components/schemas/exerciseHashId'
    exercises:
      type: object
      properties:
        exercises:
          type: array
          description: Absolute links to individual exercises within the transaction
          example:
            - https://www.polaraccesslink.com/v3/users/12/exercise-transactions/34/exercises/56
            - https://www.polaraccesslink.com/v3/users/12/exercise-transactions/34/exercises/120
          items:
            type: string
      description: Exercise transaction container
      example:
        exercises:
          - https://www.polaraccesslink.com/v3/users/12/exercise-transactions/34/exercises/56
          - https://www.polaraccesslink.com/v3/users/12/exercise-transactions/34/exercises/120
      xml:
        name: exercises
    physical-information:
      type: object
      properties:
        id:
          type: integer
          description: Physical information id
          format: int64
          example: 123
          xml:
            attribute: true
        transaction-id:
          type: integer
          description: Id of the physical-information-transaction this training was
            transferred in
          format: int64
          example: 179879
          xml:
            attribute: true
        created:
          type: string
          description: "The time physical information was created in AccessLink, in\
            \ format YYYY-MM-DDTHH:mm:ss.SSSZ"
          example: 2016-04-27T20:11:33.000Z
        polar-user:
          type: string
          description: Absolute link to user owning the activity
          example: https://www.polaraccesslink/v3/users/1
          xml:
            attribute: true
        weight:
          type: number
          description: Weight
          format: float
          example: 80
        height:
          type: number
          description: Height
          format: float
          example: 180
        maximum-heart-rate:
          type: integer
          description: Maximum heart rate
          format: int32
          example: 160
        resting-heart-rate:
          type: integer
          description: Resting hear rate
          format: int32
          example: 60
        aerobic-threshold:
          type: integer
          description: Aerobic threshold
          format: int32
          example: 123
        anaerobic-threshold:
          type: integer
          description: Anaerobic threshold
          format: int32
          example: 123
        vo2-max:
          type: integer
          description: VO2 max
          format: int32
          example: 12
        weight-source:
          type: string
          description: Weight source
          example: SOURCE_MEASURED
          enum:
            - SOURCE_MEASURED
            - SOURCE_USER
      description: User's physical information
      example:
        transaction-id: 179879
        aerobic-threshold: 123
        maximum-heart-rate: 160
        anaerobic-threshold: 123
        created: 2016-04-27T20:11:33.000Z
        weight-source: SOURCE_MEASURED
        polar-user: https://www.polaraccesslink/v3/users/1
        weight: 80
        resting-heart-rate: 60
        id: 123
        height: 180
        vo2-max: 12
      xml:
        name: physical-information
    physical-informations:
      type: object
      properties:
        physical-informations:
          type: array
          description: Absolute links to individual physical information within the
            transaction
          example:
            - https://www.polaraccesslink.com/v3/users/12/physical-information-transactions/12/physical-informations/56
            - https://www.polaraccesslink.com/v3/users/12/physical-information-transactions/12/physical-informations/120
          items:
            type: string
      description: Physical information transaction container
      example:
        physical-informations:
          - https://www.polaraccesslink.com/v3/users/12/physical-information-transactions/12/physical-informations/56
          - https://www.polaraccesslink.com/v3/users/12/physical-information-transactions/12/physical-informations/120
      xml:
        name: physical-informations
    register:
      required:
        - member-id
      type: object
      properties:
        member-id:
          type: string
          description: Partner's custom identifier for user.
          example: User_id_999
      description: Model for registering user to partner.
      xml:
        name: register
    sample:
      type: object
      properties:
        recording-rate:
          type: integer
          description: Sample recording rate in seconds. Null when recording rate
            is not applicable - currently only with RR-data.
          format: int32
          example: 5
        sample-type:
          type: string
          description: Sample type
          format: byte
        data:
          type: string
          description: Sample values as a comma-separated list of strings. Can contain
            null -values which indicate a situation where sensor was offline.
          example: "0,100,102,97,97,101,103,106,96,89,88,87,98,108,113,112,114,115,118,121,121,121,121,123,117,119,122"
      description: Training session sample data
      example:
        recording-rate: 5
        data: "0,100,102,97,97,101,103,106,96,89,88,87,98,108,113,112,114,115,118,121,121,121,121,123,117,119,122"
      xml:
        name: sample
    samples:
      type: object
      properties:
        samples:
          type: array
          description: List of URIs pointing to single sample type data.
          example:
            - https://www.polaraccesslink.com/v3/users/12/exercise-transactions/34/exercises/56/samples/0
            - https://www.polaraccesslink.com/v3/users/12/exercise-transactions/34/exercises/56/samples/3
          items:
            type: string
            xml:
              name: sample
      description: List of URIs pointing to single sample type data.
      example:
        samples:
          - https://www.polaraccesslink.com/v3/users/12/exercise-transactions/34/exercises/56/samples/0
          - https://www.polaraccesslink.com/v3/users/12/exercise-transactions/34/exercises/56/samples/3
      xml:
        name: samples
    location:
      type: object
      properties:
        latitude:
          type: number
          description: "The latitude, expressed in degrees."
          format: double
          example: 60.21982833
        longitude:
          type: number
          description: "The longitude, expressed in degrees."
          format: double
          example: 25.13925
        time:
          type: string
          description: "The time, expressed as a duration."
          example: PT210.026S
        satellites:
          type: integer
          description: Satellites. A byte-sized value with a maximum of 63.
          format: int64
          example: 4
        fix:
          type: integer
          description: Fix. A byte-sized value with a maximum of three.
          format: int64
          example: 1
      description: Exercise route point/location.
      example:
        satellites: 4
        fix: 1
        latitude: 60.21982833
        time: PT210.026S
        longitude: 25.13925
      xml:
        name: location
    route:
      type: array
      description: List of route points/locations of the exercise.
      xml:
        name: route
      items:
        $ref: '#/components/schemas/location'
    transaction-location:
      type: object
      properties:
        transaction-id:
          type: integer
          description: Id of the created transaction
          format: int64
          example: 122
        resource-uri:
          type: string
          description: Absolute links to the created transaction
          format: uri
          example: https://polaraccesslink.com/v3/users/21/physical-information-transactions/32
      description: Contains absolute link to the created transaction.
      example:
        transaction-id: 122
        resource-uri: https://polaraccesslink.com/v3/users/21/physical-information-transactions/32
      xml:
        name: transaction-location
    user:
      type: object
      properties:
        polar-user-id:
          type: integer
          description: User's id in Polar database
          format: int64
          example: 2278512
          xml:
            attribute: true
        member-id:
          type: string
          description: User's identifier in partner's database
          example: i09u9ujj
        registration-date:
          type: string
          description: Timestamp marked when ACCEPTED
          format: date-time
          example: 2011-10-14T12:50:37Z
        first-name:
          type: string
          description: User's first name
          example: Eka
        last-name:
          type: string
          description: User's surname
          example: Toka
        birthdate:
          type: string
          description: User's birthdate as YYYY-MM-DD
          example: 1985-09-06
        gender:
          type: string
          description: User's sex
          example: MALE
          enum:
            - MALE
            - FEMALE
        weight:
          type: number
          description: User's weight in kg
          format: float
          example: 66
        height:
          type: number
          description: Users height in centimeters
          format: float
          example: 170
        extra-info:
          type: array
          description: List containing answers given by the user to a number of partner-specific
            questions. Extra-info is null if there are no required fields defined
            by the partner.
          xml:
            name: extra-info
            wrapped: true
          items:
            $ref: '#/components/schemas/UserExtraInfo'
      description: User's basic information
      example:
        member-id: i09u9ujj
        birthdate: 1985-09-06
        registration-date: 2011-10-14T12:50:37Z
        gender: MALE
        extra-info:
          - name: number-of-children
            index: 0
            value: "2"
          - name: number-of-children
            index: 0
            value: "2"
        weight: 66
        first-name: Eka
        polar-user-id: 2278512
        last-name: Toka
        height: 170
      xml:
        name: user
    createdWebhook:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/createdWebhook_data'
      example:
        data:
          signature_secret_key: abe1f3ae-fd33-11e8-8eb2-f2801f1b9fd1
          id: abdf33
          events:
            - EXERCISE
          url: https://myapp.example.com/acl_webhook
    webhookInfo:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/webhookInfo_data'
      example:
        data:
          active: true
          id: abdf33
          events:
            - EXERCISE
          url: https://myapp.example.com/acl_webhook
    webhookPatch:
      type: object
      properties:
        events:
          type: array
          description: Type of events to subscribe.
          example:
            - EXERCISE
          items:
            $ref: '#/components/schemas/webhookType'
        url:
          type: string
          description: Url where the webhook notification is sent.
          format: uri
          example: https://myapp.example.com/acl_webhook
    webhookPayloadExercise:
      type: object
      properties:
        event:
          type: string
          description: Type of available data.
          example: EXERCISE
        user_id:
          type: integer
          description: Id of the user who has new data.
          format: int64
          example: 475
        entity_id:
          type: string
          description: Id of the available data.
          example: aQlC83
        timestamp:
          type: string
          description: Time when webhook notification is sent.
          format: date-time
          example: 2018-05-15T14:22:24Z
        url:
          type: string
          description: Url to the new available data.
          format: uri
          example: https://www.polaraccesslink.com/v3/exer2022-09-30cises/aQlC83
      description: Payload example for webhook payload for event type EXERCISE
    webhookPayloadSleep:
      type: object
      properties:
        event:
          type: string
          description: Type of available data.
          example: SLEEP
        user_id:
          type: integer
          description: Id of the user who has new data.
          format: int64
          example: 475
        date:
          type: string
          description: Date of the available sleep data.
          example: 2019-12-31
        timestamp:
          type: string
          description: Time when webhook notification is sent.
          format: date-time
          example: 2018-05-15T14:22:24Z
        url:
          type: string
          description: Url to the new available data.
          format: uri
          example: https://www.polaraccesslink.com/v3/users/sleep/2019-12-31
      description: Payload example for webhook payload for event type SLEEP
    webhookPayloadContinuousHeartRate:
      type: object
      properties:
        event:
          type: string
          description: Type of available data.
          example: CONTINUOUS_HEART_RATE
        user_id:
          type: integer
          description: Id of the user who has new data.
          format: int64
          example: 475
        date:
          type: string
          description: Date of the available continuous hr data.
          example: 2022-09-30
        timestamp:
          type: string
          description: Time when webhook notification is sent.
          format: date-time
          example: 2018-05-15T14:22:24Z
        url:
          type: string
          description: Url to the new available data.
          format: uri
          example: https://www.polaraccesslink.com/v3/users/continuous-heart-rate/2022-09-30
      description: Payload example for webhook payload for event type CONTINUOUS_HEART_RATE
    webhookPayloadCircadianBedtime:
      type: object
      properties:
        event:
          type: string
          description: Type of available data.
          example: SLEEP_WISE_CIRCADIAN_BEDTIME
        user_id:
          type: integer
          description: Id of the user who has new data.
          format: int64
          example: 475
        from:
          type: string
          description: For consistency use period for all descriptions
          example: 2022-09-30
        to:
          type: string
          description: For consistency use period for all descriptions
          example: 2022-10-02
        timestamp:
          type: string
          description: Time when webhook notification is sent.
          format: date-time
          example: 2022-10-02T14:22:24Z
        url:
          type: string
          description: Url to the new available data.
          format: uri
          example: https://www.polaraccesslink.com/v3/users/sleepwise/circadian_bedtime/date?from=2022-09-30&to=2022-10-02
      description: Payload example for webhook payload for event type SLEEP_WISE_CIRCADIAN_BEDTIME
    webhookPayloadAlertness:
      type: object
      properties:
        event:
          type: string
          description: Type of available data.
          example: SLEEP_WISE_ALERTNESS
        user_id:
          type: integer
          description: Id of the user who has new data.
          format: int64
          example: 475
        from:
          type: string
          description: For consistency use period for all descriptions
          example: 2022-09-30
        to:
          type: string
          description: For consistency use period for all descriptions
          example: 2022-10-02
        timestamp:
          type: string
          description: Time when webhook notification is sent.
          format: date-time
          example: 2022-10-02T14:22:24Z
        url:
          type: string
          description: Url to the new available data.
          format: uri
          example: https://www.polaraccesslink.com/v3/users/sleepwise/alertness/date?from=2022-09-30&to=2022-10-02
      description: Payload example for webhook payload for event type SLEEP_WISE_ALERTNESS
    webhookPing:
      type: object
      properties:
        timestamp:
          type: string
          description: Time when webhook ping is sent.
          format: date-time
          example: 2018-05-15T14:22:24Z
        event:
          type: string
          description: Only possible value is PING for ping message.
          enum:
            - PING
      description: AccessLink sends ping message as HTTP POST to callback URL being
        registered when creating new or modifying webhook. Ping message is sent to
        verify webhook URL. Receiving service must response to ping message with 200
        OK or the webhook is not created/modified.
    webhookRequest:
      required:
        - events
        - url
      type: object
      properties:
        events:
          type: array
          description: Type of events to subscribe.
          example:
            - EXERCISE
          items:
            $ref: '#/components/schemas/webhookType'
        url:
          type: string
          description: Url where the webhook notification is sent.
          format: uri
          example: https://myapp.example.com/acl_webhook
    webhookType:
      type: string
      description: "Event type to subscribe. Currently EXERCISE, SLEEP, CONTINUOUS_HEART_RATE,\
        \ SLEEP_WISE_CIRCADIAN_BEDTIME and SLEEP_WISE_ALERTNESS are supported."
      enum:
        - "EXERCISE, SLEEP, CONTINUOUS_HEART_RATE, SLEEP_WISE_CIRCADIAN_BEDTIME, SLEEP_WISE_ALERTNESS"
    zone:
      type: object
      properties:
        index:
          type: integer
          description: Zone list index
          format: int32
          example: 1
        lower-limit:
          type: integer
          description: Lower heart-rate boundary of the zone
          format: int32
          example: 110
        upper-limit:
          type: integer
          description: Upper heart-rate boundary of the zone
          format: int32
          example: 130
        in-zone:
          type: string
          description: Time duration spent in the zone ISO 8601
          example: PT4S
      description: Heart-rate zone information
      example:
        lower-limit: 110
        upper-limit: 130
        in-zone: PT4S
        index: 1
      xml:
        name: zone
    zones:
      type: object
      properties:
        zone:
          type: array
          description: List of heart rate zones.
          items:
            $ref: '#/components/schemas/zone'
      description: List containing the times (in zone) in different heart rate zones
        (i.e. Heart rate between lower and upper values). Zone is null if no zone
        information available.
      example:
        zone:
          - lower-limit: 110
            upper-limit: 130
            in-zone: PT4S
            index: 1
          - lower-limit: 110
            upper-limit: 130
            in-zone: PT4S
            index: 1
      xml:
        name: zones
    sleep:
      type: object
      properties:
        polar_user:
          type: string
          description: Absolute link to user owning the sleep
          example: https://www.polaraccesslink/v3/users/1
        date:
          type: string
          description: Result date of the sleep
          format: date
          example: 2020-01-01
        sleep_start_time:
          type: string
          description: Start timestamp of the sleep as ISO-8601 datetime string
          format: date-time
          example: 2020-01-01T00:39:07+03:00
        sleep_end_time:
          type: string
          description: End timestamp of the sleep as ISO-8601 datetime string
          format: date-time
          example: 2020-01-01T09:19:37+03:00
        device_id:
          type: string
          description: Id of the device the sleep was measured with
          example: 1111AAAA
        continuity:
          type: number
          description: "Continuity is an estimate of how continuous the sleep was\
            \ on a scale of 1.0 – 5.0, where 5.0 reflects uninterrupted sleep. The\
            \ lower the value the more fragmented the sleep was."
          format: float
          example: 2.1
        continuity_class:
          type: integer
          description: Verbal assessments of sleep continuity Very continuous sleep
            (5) Continuous sleep (4) Fairly continuous sleep (3) Fairly fragmented
            sleep (2) Fragmented sleep (1)
          format: int32
          example: 2
        light_sleep:
          type: integer
          description: Total time in seconds spent in light sleep stage between when
            you fell asleep and when you woke up. Corresponds to N1+ N2 according
            to AASM classification.
          format: int32
          example: 1000
        deep_sleep:
          type: integer
          description: Total time in seconds spent in the deep sleep stage between
            when you fell asleep and when you woke up. Corresponds to N3 according
            to AASM classification.
          format: int32
          example: 1000
        rem_sleep:
          type: integer
          description: Total time in seconds spent in REM sleep stage between when
            you fell asleep and when you woke up. REM stands for rapid eye movement.
          format: int32
          example: 1000
        unrecognized_sleep_stage:
          type: integer
          description: "Total time in seconds spent in unrecognised sleep stage. Sometimes\
            \ it's impossible to recognize sleep stages. This might happen when, for\
            \ example, the wrist strap is not tight enough, or if you sleep on your\
            \ hand."
          format: int32
          example: 1000
        sleep_score:
          type: integer
          description: "Sleep score summarizes the amount and quality of your sleep\
            \ into a single number on a scale of 1 – 100. Sleep score tells you how\
            \ well you slept compared to the indicators of a good night's sleep based\
            \ on the current sleep science. It consists of six components; sleep time,\
            \ long interruptions, continuity, actual sleep, REM sleep, and deep sleep."
          format: int32
          example: 80
        total_interruption_duration:
          type: integer
          description: The total time in seconds you spent awake between when you
            fell asleep and when you woke up.
          format: int32
          example: 1000
        sleep_charge:
          type: integer
          description: "Sleep score compared to your usual level from the past 28\
            \ days.Scale: much below usual (1) – below usual (2) – usual (3) – above\
            \ usual (4) – much above usual(5)."
          format: int32
          example: 3
        sleep_goal:
          type: integer
          description: Time goal in seconds for sleep selectedby user. A default value
            of the setting is based on age-related sleep duration recommendations.
          format: int32
          example: 28800
        sleep_rating:
          type: integer
          description: "Numeric value given by user for representing the quality of\
            \ sleep. Selection scale: Very poorly(1), poorly(2), ok(3), well(4), very\
            \ well(5). 0 means no value is given."
          format: int32
          example: 3
        short_interruption_duration:
          type: integer
          description: Total time in seconds of short interruptions. Short interruption
            is interruption in sleep of less than 90 seconds.
          format: int32
          example: 500
        long_interruption_duration:
          type: integer
          description: Total time in seconds of long interruptions. Long interruption
            is interruption in sleep of 90 seconds or more.
          format: int32
          example: 300
        sleep_cycles:
          type: integer
          description: Number of sleep cycles.
          format: int32
          example: 6
        group_duration_score:
          type: number
          description: "Sleep score consists of six components that are grouped under\
            \ three themes. Score for sleep duration theme looks at your sleep time\
            \ compared to your ‘preferred sleep time’ setting and the age-related\
            \ duration recommendations. Group duration score ranges from 1.0 to 100.0.\
            \ It is interpreted as textual feedback: poor, moderate or good amount."
          format: float
          example: 100
        group_solidity_score:
          type: number
          description: "Sleep score consists of six components that are grouped under\
            \ three themes. Score for sleep solidity theme is the average of the component\
            \ scores of long interruptions, continuity and actual sleep. Group solidity\
            \ score ranges from 1.0 to 100.0. It is interpreted as textual feedback:\
            \ poor, moderate or good solidity."
          format: float
          example: 75
        group_regeneration_score:
          type: number
          description: "Sleep score consists of six components that are grouped under\
            \ three themes. Score for regeneration theme is the average of the scores\
            \ of REM sleep and deep sleep. Group regeneration score ranges from 1.0\
            \ to 100.0. It is interpreted as textual feedback: poor, moderate or good\
            \ regeneration"
          format: float
          example: 54.2
        hypnogram:
          type: object
          description: |-
            The time span between when you fell asleep and when you woke up is classified into light, deep or REM sleep, or unrecognised or wake in 30-s epochs.

            0 = WAKE, 1 = REM, 2 = LIGHTER NON-REM, 3 = LIGHT NON-REM, 4 = DEEP NON-REM, 5 = UNKNOWN (eg. due to bad skin contact).
          example:
            "00:39": 2
            "00:50": 3
            "01:23": 6
        heart_rate_samples:
          type: object
          description: 5 min average samples of heart rate from the duration of the
            sleep. Default time between samples is 5 minutes. There may be periods
            with samples more often than every 5 minutes. Unit of samples is beats
            per minute (bpm).
          example:
            "00:41": 76
            "00:46": 77
            "00:51": 76
      example:
        date: 2020-01-01T00:00:00.000+00:00
        sleep_end_time: 2020-01-01T09:19:37+03:00
        deep_sleep: 1000
        hypnogram:
          "00:39": 2
          "00:50": 3
          "01:23": 6
        heart_rate_samples:
          "00:41": 76
          "00:46": 77
          "00:51": 76
        sleep_score: 80
        device_id: 1111AAAA
        unrecognized_sleep_stage: 1000
        continuity: 2.1
        rem_sleep: 1000
        sleep_cycles: 6
        sleep_start_time: 2020-01-01T00:39:07+03:00
        sleep_goal: 28800
        group_duration_score: 100
        short_interruption_duration: 500
        sleep_rating: 3
        polar_user: https://www.polaraccesslink/v3/users/1
        sleep_charge: 3
        group_regeneration_score: 54.2
        light_sleep: 1000
        long_interruption_duration: 300
        continuity_class: 2
        total_interruption_duration: 1000
        group_solidity_score: 75
    nights:
      type: object
      properties:
        nights:
          type: array
          description: List of sleep objects
          items:
            $ref: '#/components/schemas/sleep'
      description: Sleep list
      example:
        nights:
          - date: 2020-01-01T00:00:00.000+00:00
            sleep_end_time: 2020-01-01T09:19:37+03:00
            deep_sleep: 1000
            hypnogram:
              "00:39": 2
              "00:50": 3
              "01:23": 6
            heart_rate_samples:
              "00:41": 76
              "00:46": 77
              "00:51": 76
            sleep_score: 80
            device_id: 1111AAAA
            unrecognized_sleep_stage: 1000
            continuity: 2.1
            rem_sleep: 1000
            sleep_cycles: 6
            sleep_start_time: 2020-01-01T00:39:07+03:00
            sleep_goal: 28800
            group_duration_score: 100
            short_interruption_duration: 500
            sleep_rating: 3
            polar_user: https://www.polaraccesslink/v3/users/1
            sleep_charge: 3
            group_regeneration_score: 54.2
            light_sleep: 1000
            long_interruption_duration: 300
            continuity_class: 2
            total_interruption_duration: 1000
            group_solidity_score: 75
          - date: 2020-01-01T00:00:00.000+00:00
            sleep_end_time: 2020-01-01T09:19:37+03:00
            deep_sleep: 1000
            hypnogram:
              "00:39": 2
              "00:50": 3
              "01:23": 6
            heart_rate_samples:
              "00:41": 76
              "00:46": 77
              "00:51": 76
            sleep_score: 80
            device_id: 1111AAAA
            unrecognized_sleep_stage: 1000
            continuity: 2.1
            rem_sleep: 1000
            sleep_cycles: 6
            sleep_start_time: 2020-01-01T00:39:07+03:00
            sleep_goal: 28800
            group_duration_score: 100
            short_interruption_duration: 500
            sleep_rating: 3
            polar_user: https://www.polaraccesslink/v3/users/1
            sleep_charge: 3
            group_regeneration_score: 54.2
            light_sleep: 1000
            long_interruption_duration: 300
            continuity_class: 2
            total_interruption_duration: 1000
            group_solidity_score: 75
    available-sleep:
      type: object
      properties:
        date:
          type: string
          description: Result date of the sleep
          format: date
          example: 2020-01-01
        start_time:
          type: string
          description: Start timestamp of the sleep as ISO-8601 datetime string
          format: date-time
          example: 2020-01-01T00:39:07+03:00
        end_time:
          type: string
          description: End timestamp of the sleep as ISO-8601 datetime string
          format: date-time
          example: 2020-01-01T09:39:07+03:00
      example:
        date: 2020-01-01T00:00:00.000+00:00
        start_time: 2020-01-01T00:39:07+03:00
        end_time: 2020-01-01T09:39:07+03:00
    available-sleeps:
      type: object
      properties:
        available:
          type: array
          description: List of available sleep data
          items:
            $ref: '#/components/schemas/available-sleep'
      example:
        available:
          - date: 2020-01-01T00:00:00.000+00:00
            start_time: 2020-01-01T00:39:07+03:00
            end_time: 2020-01-01T09:39:07+03:00
          - date: 2020-01-01T00:00:00.000+00:00
            start_time: 2020-01-01T00:39:07+03:00
            end_time: 2020-01-01T09:39:07+03:00
    nightly-recharge:
      type: object
      properties:
        polar_user:
          type: string
          description: Absolute link to user owning the sleep
          example: https://www.polaraccesslink/v3/users/1
        date:
          type: string
          description: Result date of the Nightly Recharge
          format: date
          example: 2020-01-01
        heart_rate_avg:
          type: integer
          description: Average heart rate as beats per minute (bpm) during a 4-hour
            period starting at 30 minutes after falling asleep.
          format: int32
          example: 70
        beat_to_beat_avg:
          type: integer
          description: Average time in milliseconds (ms) between successive heart
            beats during a 4-hour period starting at 30 minutes after falling asleep.
          format: int32
          example: 816
        heart_rate_variability_avg:
          type: integer
          description: Average variation in the time in milliseconds (ms) between
            successive heart beats during a 4-hour period starting at 30 minutes after
            falling asleep. The Heart rate variability is Root Mean Square of Successive
            Differences (RMSSD) in beat-to-beat intervals.
          format: int32
          example: 28
        breathing_rate_avg:
          type: number
          description: Average breathing rate as breaths per minute (bpm) during a
            4-hour period starting at 30 minutes after falling asleep.
          format: float
          example: 14.1
        nightly_recharge_status:
          type: integer
          description: "The Nightly Recharge status shows how your body was able to\
            \ recover from training and stress during the night. Scores for both ANS\
            \ charge and sleep charge are taken into account. Nightly Recharge status\
            \ has the following (6-item) scale: very poor (1) – poor (2) – compromised\
            \ (3) – OK (4) – good (5) – very good (6)."
          format: int32
          example: 3
        ans_charge:
          type: number
          description: "ANS stands for autonomic nervous system. ANS charge is formed\
            \ by measuring heart rate, heart rate variability and breathing rate during\
            \ roughly the first four hours of your sleep. It is formed comparing your\
            \ last night to your usual levels from the past 28 days. The scale is\
            \ from -10.0 to +10.0. Around zero is your usual level."
          format: float
          example: 0
        ans_charge_status:
          type: integer
          description: ANS charge status = much below usual (1) - below usual (2)
            - usual (3) - above usual (4) - much above usual (5)
          format: int32
          example: 3
        hrv_samples:
          type: object
          description: 5-minute average samples of heart rate variability. Unit of
            samples is milliseconds(ms).
          example:
            "00:41": 14
            "00:46": 14
            "00:51": 15
        breathing_samples:
          type: object
          description: 5-minute average samples of breathing rate. Unit of samples
            is breaths per minute (bpm).
          example:
            "00:39": 13.4
            "00:44": 13.5
            "00:49": 13.5
      example:
        date: 2020-01-01T00:00:00.000+00:00
        heart_rate_avg: 70
        nightly_recharge_status: 3
        ans_charge: 0
        breathing_samples:
          "00:39": 13.4
          "00:44": 13.5
          "00:49": 13.5
        hrv_samples:
          "00:41": 14
          "00:46": 14
          "00:51": 15
        heart_rate_variability_avg: 28
        breathing_rate_avg: 14.1
        beat_to_beat_avg: 816
        ans_charge_status: 3
        polar_user: https://www.polaraccesslink/v3/users/1
    continuous-heartrate:
      type: object
      properties:
        polar_user:
          type: string
          description: Absolute link to user owning the continuous heart rate samples
          example: https://www.polaraccesslink/v3/users/1
        date:
          type: string
          description: Result date of the Continuous Heart Rate
          format: date
          example: 2020-01-01
        heart_rate_samples:
          $ref: '#/components/schemas/continuousheartrate_heart_rate_samples'
      description: '5 min average samples of heart rate from the duration of the continuous
        heart rate measurement. Default  time between samples is 5 minutes. There
        may be periods with samples more often than every 5 minutes.  Unit of samples
        is beats per minute (bpm).  '
      example:
        polar_user: https://polaraccesslink.com/v3/users/627139
        date: 2022-09-12
        heart_rate_samples:
          - heart_rate: 63
            sample_time: 00:02:08
          - heart_rate: 62
            sample_time: 00:07:08
    recharges:
      type: object
      properties:
        recharges:
          type: array
          description: List of Nightly Recharge objects
          items:
            $ref: '#/components/schemas/nightly-recharge'
      description: Nightly Recharge list
      example:
        recharges:
          - date: 2020-01-01T00:00:00.000+00:00
            heart_rate_avg: 70
            nightly_recharge_status: 3
            ans_charge: 0
            breathing_samples:
              "00:39": 13.4
              "00:44": 13.5
              "00:49": 13.5
            hrv_samples:
              "00:41": 14
              "00:46": 14
              "00:51": 15
            heart_rate_variability_avg: 28
            breathing_rate_avg: 14.1
            beat_to_beat_avg: 816
            ans_charge_status: 3
            polar_user: https://www.polaraccesslink/v3/users/1
          - date: 2020-01-01T00:00:00.000+00:00
            heart_rate_avg: 70
            nightly_recharge_status: 3
            ans_charge: 0
            breathing_samples:
              "00:39": 13.4
              "00:44": 13.5
              "00:49": 13.5
            hrv_samples:
              "00:41": 14
              "00:46": 14
              "00:51": 15
            heart_rate_variability_avg: 28
            breathing_rate_avg: 14.1
            beat_to_beat_avg: 816
            ans_charge_status: 3
            polar_user: https://www.polaraccesslink/v3/users/1
    alertness:
      type: object
      properties:
        grade:
          type: number
          description: Grade
          format: double
          example: 9.9
        grade_validity_seconds:
          type: number
          description: Grade validity seconds
          format: int
          example: 57600
        grade_type:
          type: string
          description: Grade type
          example: GRADE_TYPE_PRIMARY
          enum:
            - GRADE_TYPE_UNKNOWN
            - GRADE_TYPE_PRIMARY
            - GRADE_TYPE_ADDITIONAL
        grade_classification:
          type: string
          description: Grade classification
          example: GRADE_CLASSIFICATION_STRONG
          enum:
            - GRADE_CLASSIFICATION_UNKNOWN
            - GRADE_CLASSIFICATION_WEAK
            - GRADE_CLASSIFICATION_FAIR
            - GRADE_CLASSIFICATION_STRONG
            - GRADE_CLASSIFICATION_EXCELLENT
        validity:
          type: string
          description: Validity
          example: VALIDITY_ESTIMATE
          enum:
            - VALIDITY_UNKNOWN
            - VALIDITY_RESET
            - VALIDITY_NOT_VALID
            - VALIDITY_ESTIMATE
            - VALIDITY_VALID
        sleep_inertia:
          type: string
          description: Sleep inertia
          example: SLEEP_INERTIA_MILD
          enum:
            - SLEEP_INERTIA_UNKNOWN
            - SLEEP_INERTIA_NO_INERTIA
            - SLEEP_INERTIA_MILD
            - SLEEP_INERTIA_MODERATE
            - SLEEP_INERTIA_HEAVY
        sleep_type:
          type: string
          description: Sleep type
          example: SLEEP_TYPE_PRIMARY
          enum:
            - SLEEP_TYPE_UNKNOWN
            - SLEEP_TYPE_PRIMARY
            - SLEEP_TYPE_SECONDARY
            - SLEEP_TYPE_ARTIFICIAL
        result_type:
          type: string
          description: Result type
          example: ALERTNESS_TYPE_HISTORY
          enum:
            - ALERTNESS_TYPE_UNKNOWN
            - ALERTNESS_TYPE_PREDICTION
            - ALERTNESS_TYPE_HISTORY
        period_start_time:
          type: string
          description: Alertness period start time (UTC)
          format: date
        period_end_time:
          type: string
          description: Alertness period end time (UTC)
          format: date
        sleep_period_start_time:
          type: string
          description: Sleep period start time (UTC)
          format: date
        sleep_period_end_time:
          type: string
          description: Sleep period end time (UTC)
          format: date
        sleep_timezone_offset_minutes:
          type: number
          description: Sleep timezone offset minutes
          format: int
          example: 120
        hourly_data:
          type: array
          description: Alertness hourly data for the alertness period
          items:
            $ref: '#/components/schemas/alertness-hourly-data'
      description: Alertness period data
      example:
        grade: 9.9
        grade_validity_seconds: 57600
        grade_type: GRADE_TYPE_PRIMARY
        grade_classification: GRADE_CLASSIFICATION_STRONG
        validity: VALIDITY_ESTIMATE
        sleep_inertia: SLEEP_INERTIA_MILD
        sleep_type: SLEEP_TYPE_PRIMARY
        result_type: ALERTNESS_TYPE_HISTORY
        period_start_time: 2022-11-20T20:52:20
        period_end_time: 2022-11-21T19:15:52
        sleep_period_start_time: 2022-11-20T20:52:20.57
        sleep_period_end_time: 2022-11-21T04:11:20.57
        sleep_timezone_offset_minutes: 120
        hourly_data:
          - validity: VALIDITY_ESTIMATE
            alertness_level: ALERTNESS_LEVEL_LOW
            start_time: 2022-11-21T04:12:00
            end_time: 2022-11-21T05:00:00
    circadian-bedtime:
      type: object
      properties:
        validity:
          type: string
          description: Validity
          example: VALIDITY_ESTIMATE
          enum:
            - VALIDITY_UNKNOWN
            - VALIDITY_RESET
            - VALIDITY_NOT_VALID
            - VALIDITY_ESTIMATE
            - VALIDITY_VALID
        quality:
          type: string
          description: Quality
          example: CIRCADIAN_BEDTIME_QUALITY_COMPROMISED
          enum:
            - CIRCADIAN_BEDTIME_QUALITY_UNKNOWN
            - CIRCADIAN_BEDTIME_QUALITY_WEAK
            - CIRCADIAN_BEDTIME_QUALITY_COMPROMISED
            - CIRCADIAN_BEDTIME_QUALITY_CLEARLY_RECOGNIZABLE
        result_type:
          type: string
          description: Result type
          example: CIRCADIAN_BEDTIME_TYPE_HISTORY
          enum:
            - CIRCADIAN_BEDTIME_TYPE_UNKNOWN
            - CIRCADIAN_BEDTIME_TYPE_PREDICTION
            - CIRCADIAN_BEDTIME_TYPE_HISTORY
        period_start_time:
          type: string
          description: Circadian bedtime period start time (UTC)
          format: date
        period_end_time:
          type: string
          description: Circadian bedtime period end time (UTC)
          format: date
        preferred_sleep_period_start_time:
          type: string
          description: Circadian bedtime preferred sleep period start time (UTC)
          format: date
        preferred_sleep_period_end_time:
          type: string
          description: Circadian bedtime preferred sleep period end time (UTC)
          format: date
        sleep_gate_start_time:
          type: string
          description: Circadian bedtime sleep gate (suggested fall a sleep window)
            start time (UTC)
          format: date
        sleep_gate_end_time:
          type: string
          description: Circadian bedtime sleep gate (suggested fall a sleep window)
            end time (UTC)
          format: date
        sleep_timezone_offset_minutes:
          type: number
          description: Sleep timezone offset minutes
          format: int
          example: 120
      description: Circadian bedtime period data
      example:
        validity: VALIDITY_ESTIMATE
        quality: CIRCADIAN_BEDTIME_QUALITY_COMPROMISED
        result_type: CIRCADIAN_BEDTIME_TYPE_HISTORY
        period_start_time: 2022-11-20T21:18:30
        period_end_time: 2022-11-21T05:18:30
        preferred_sleep_period_start_time: 2022-11-20T21:18:30
        preferred_sleep_period_end_time: 2022-11-21T05:18:30
        sleep_gate_start_time: 2022-11-20T21:03:30
        sleep_gate_end_time: 2022-11-20T21:33:30
        sleep_timezone_offset_minutes: 120
    alertness-hourly-data:
      type: object
      properties:
        validity:
          type: string
          description: Validity
          example: VALIDITY_ESTIMATE
          enum:
            - VALIDITY_UNKNOWN
            - VALIDITY_RESET
            - VALIDITY_NOT_VALID
            - VALIDITY_ESTIMATE
            - VALIDITY_VALID
        alertness_level:
          type: string
          description: Alertness level
          example: ALERTNESS_LEVEL_VERY_HIGH
          enum:
            - ALERTNESS_LEVEL_UNKNOWN
            - ALERTNESS_LEVEL_MINIMAL
            - ALERTNESS_LEVEL_VERY_LOW
            - ALERTNESS_LEVEL_LOW
            - ALERTNESS_LEVEL_HIGH
            - ALERTNESS_LEVEL_VERY_HIGH
        start_time:
          type: string
          description: Alertness period start time (UTC)
          format: date
        end_time:
          type: string
          description: Alertness period end time (UTC)
          format: date
      description: Hourly data for the alertness period
    body-temperature-period:
      type: object
      properties:
        source_device_id:
          type: string
          example: 1111AAAA
        measurement_type:
          type: string
          description: Measurement type
          example: TM_CORE_TEMPERATURE
          enum:
            - TM_UNKNOWN
            - TM_SKIN_TEMPERATURE
            - TM_CORE_TEMPERATURE
        sensor_location:
          type: string
          description: Sensor location
          example: SL_PROXIMAL
          enum:
            - SL_UNKNOWN
            - SL_DISTAL
            - SL_PROXIMAL
        start_time:
          type: string
          description: Measurement period start time (UTC)
          format: date-time
        end_time:
          type: string
          description: Measurement period end time (UTC)
          format: date-time
        modified_time:
          type: string
          description: Measurement period modified time (UTC)
          format: date-time
        samples:
          type: array
          items:
            $ref: '#/components/schemas/body-temperature-sample'
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        measurement_type: TM_CORE_TEMPERATURE
        modified_time: 2000-01-23T04:56:07.000+00:00
        sensor_location: SL_PROXIMAL
        end_time: 2000-01-23T04:56:07.000+00:00
        source_device_id: 1111AAAA
        samples:
          - temperature_celsius: 36.5
            recording_time_delta_milliseconds: 123
          - temperature_celsius: 36.5
            recording_time_delta_milliseconds: 123
    body-temperature-sample:
      type: object
      properties:
        temperature_celsius:
          type: number
          format: float
          example: 36.5
        recording_time_delta_milliseconds:
          pattern: "[0-9]+"
          type: integer
          format: int64
          example: 123
      example:
        temperature_celsius: 36.5
        recording_time_delta_milliseconds: 123
    skin-temperature:
      type: object
      properties:
        sleep_time_skin_temperature_celsius:
          type: number
          format: float
          example: 36.5
        deviation_from_baseline_celsius:
          type: number
          format: float
          example: 0.5
        sleep_date:
          type: string
          format: date
          example: 2023-10-20
      example:
        deviation_from_baseline_celsius: 0.5
        sleep_time_skin_temperature_celsius: 36.5
        sleep_date: 2023-10-20T00:00:00.000+00:00
    skin-contact-period:
      type: object
      properties:
        source_device_id:
          type: string
          example: 1111AAAA
        start_time:
          type: string
          description: Measurement period start time (UTC)
          format: date-time
        end_time:
          type: string
          description: Measurement period end time (UTC)
          format: date-time
        modified_time:
          type: string
          description: Measurement period modified time (UTC)
          format: date-time
        skin_contact_changes:
          type: array
          items:
            $ref: '#/components/schemas/skin-contact-change'
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        modified_time: 2000-01-23T04:56:07.000+00:00
        end_time: 2000-01-23T04:56:07.000+00:00
        skin_contact_changes:
          - recording_time_delta_milliseconds: 123
            skin_contact: true
          - recording_time_delta_milliseconds: 123
            skin_contact: true
        source_device_id: 1111AAAA
    skin-contact-change:
      type: object
      properties:
        skin_contact:
          type: boolean
          example: true
        recording_time_delta_milliseconds:
          pattern: "[0-9]+"
          type: integer
          format: int64
          example: 123
      example:
        recording_time_delta_milliseconds: 123
        skin_contact: true
    ecg-test-result:
      type: object
      properties:
        source_device_id:
          type: string
          example: 1111AAAA
        test_time:
          type: integer
          format: int64
          example: 1697787256
        time_zone_offset:
          type: integer
          format: int32
          example: 180
        average_heart_rate_bpm:
          type: integer
          format: uint32
          example: 60
        heart_rate_variability_ms:
          type: number
          format: float
          example: 0
        heart_rate_variability_level:
          type: string
          example: ECG_HRV_LEVEL_NO_BASELINE
          enum:
            - ECG_HRV_LEVEL_NO_BASELINE
            - ECG_HRV_LEVEL_BELOW_USUAL
            - ECG_HRV_LEVEL_USUAL
            - ECG_HRV_LEVEL_ABOVE_USUAL
        rri_ms:
          type: number
          format: float
          example: 100
        pulse_transit_time_systolic_ms:
          type: number
          format: float
          example: 100
        pulse_transit_time_diastolic_ms:
          type: number
          format: float
          example: 100
        pulse_transit_time_quality_index:
          type: number
          format: float
          example: 100
        samples:
          type: array
          items:
            $ref: '#/components/schemas/ecg-sample'
        quality_measurements:
          type: array
          items:
            $ref: '#/components/schemas/quality-measurement'
      example:
        test_time: 1697787256
        average_heart_rate_bpm: 60
        time_zone_offset: 180
        pulse_transit_time_systolic_ms: 100
        pulse_transit_time_quality_index: 100
        rri_ms: 100
        quality_measurements:
          - recording_time_delta_ms: 123
            quality_level: ECG_QUALITY_HIGH
          - recording_time_delta_ms: 123
            quality_level: ECG_QUALITY_HIGH
        heart_rate_variability_ms: 0
        pulse_transit_time_diastolic_ms: 100
        source_device_id: 1111AAAA
        samples:
          - amplitude_mv: 0.1
            recording_time_delta_ms: 123
          - amplitude_mv: 0.1
            recording_time_delta_ms: 123
        heart_rate_variability_level: ECG_HRV_LEVEL_NO_BASELINE
    ecg-sample:
      type: object
      properties:
        recording_time_delta_ms:
          type: integer
          format: int32
          example: 123
        amplitude_mv:
          type: number
          format: float
          example: 0.1
      example:
        amplitude_mv: 0.1
        recording_time_delta_ms: 123
    quality-measurement:
      type: object
      properties:
        recording_time_delta_ms:
          type: integer
          format: int32
          example: 123
        quality_level:
          type: string
          example: ECG_QUALITY_HIGH
          enum:
            - ECG_QUALITY_UNKNOWN
            - ECG_QUALITY_NO_CONTACT
            - ECG_QUALITY_LOW
            - ECG_QUALITY_HIGH
      example:
        recording_time_delta_ms: 123
        quality_level: ECG_QUALITY_HIGH
    spo2-test-result:
      type: object
      properties:
        source_device_id:
          type: string
          example: 1111AAAA
        test_time:
          type: integer
          format: int64
          example: 1697787256
        time_zone_offset:
          type: integer
          format: int32
          example: 180
        test_status:
          type: string
          example: SPO2_TEST_PASSED
          enum:
            - SPO2_TEST_PASSED
            - SPO2_TEST_INCONCLUSIVE_TOO_LOW_QUALITY_IN_SAMPLES
            - SPO2_TEST_INCONCLUSIVE_TOO_LOW_OVERALL_QUALITY
            - SPO2_TEST_INCONCLUSIVE_TOO_MANY_MISSING_SAMPLES
        blood_oxygen_percent:
          type: integer
          format: int32
          example: 95
        spo2_class:
          type: string
          example: SPO2_CLASS_NORMAL
          enum:
            - SPO2_CLASS_UNKNOWN
            - SPO2_CLASS_VERY_LOW
            - SPO2_CLASS_LOW
            - SPO2_CLASS_NORMAL
        spo2_value_deviation_from_baseline:
          type: string
          example: DEVIATION_NO_BASELINE
          enum:
            - DEVIATION_NO_BASELINE
            - DEVIATION_BELOW_USUAL
            - DEVIATION_USUAL
            - DEVIATION_ABOVE_USUAL
        spo2_quality_average_percent:
          type: number
          format: float
          example: 90
        average_heart_rate_bpm:
          type: integer
          format: uint32
          example: 60
        heart_rate_variability_ms:
          type: number
          format: float
          example: 100
        spo2_hrv_deviation_from_baseline:
          type: string
          example: DEVIATION_NO_BASELINE
          enum:
            - DEVIATION_NO_BASELINE
            - DEVIATION_BELOW_USUAL
            - DEVIATION_USUAL
            - DEVIATION_ABOVE_USUAL
        altitude_meters:
          type: number
          format: float
          example: 50
      example:
        spo2_value_deviation_from_baseline: DEVIATION_NO_BASELINE
        test_status: SPO2_TEST_PASSED
        test_time: 1697787256
        spo2_class: SPO2_CLASS_NORMAL
        spo2_hrv_deviation_from_baseline: DEVIATION_NO_BASELINE
        blood_oxygen_percent: 95
        average_heart_rate_bpm: 60
        time_zone_offset: 180
        spo2_quality_average_percent: 90
        heart_rate_variability_ms: 100
        source_device_id: 1111AAAA
        altitude_meters: 50
    createdWebhook_data:
      type: object
      properties:
        id:
          type: string
          description: Id of the new webhook.
          example: abdf33
        events:
          type: array
          description: Subscribed event types.
          example:
            - EXERCISE
          items:
            $ref: '#/components/schemas/webhookType'
        url:
          type: string
          description: Url where the webhook notification is sent.
          format: uri
          example: https://myapp.example.com/acl_webhook
        signature_secret_key:
          type: string
          description: Signing key for verifying that sender is actually Polar.
          example: abe1f3ae-fd33-11e8-8eb2-f2801f1b9fd1
      example:
        signature_secret_key: abe1f3ae-fd33-11e8-8eb2-f2801f1b9fd1
        id: abdf33
        events:
          - EXERCISE
        url: https://myapp.example.com/acl_webhook
    webhookInfo_data:
      type: object
      properties:
        id:
          type: string
          description: Id of the webhook.
          example: abdf33
        events:
          type: array
          description: Subscribed event types.
          example:
            - EXERCISE
          items:
            $ref: '#/components/schemas/webhookType'
        url:
          type: string
          description: Url where the webhook notification is sent.
          format: uri
          example: https://myapp.example.com/acl_webhook
        active:
          type: boolean
          description: Is the webhook active.
          example: true
      example:
        active: true
        id: abdf33
        events:
          - EXERCISE
        url: https://myapp.example.com/acl_webhook
    continuousheartrate_heart_rate_samples:
      type: object
      properties:
        heart_rate:
          type: integer
          description: heart rate rpm
        sample_time:
          type: string
          description: Measurement time of heart rate. Device time used for measurement
          format: date
  securitySchemes:
    Basic:
      type: http
      scheme: basic
      x-basicInfoFunc: swagger_server.controllers.authorization_controller.check_Basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://flow.polar.com/oauth2/authorization
          tokenUrl: https://polarremote.com/v2/oauth2/token
          scopes:
            accesslink.read_all: Allows read access to user's data
      x-tokenInfoFunc: swagger_server.controllers.authorization_controller.check_OAuth2
      x-scopeValidateFunc: swagger_server.controllers.authorization_controller.validate_scope_OAuth2

